type :ElleMeta = { l, l, w, l, l, w, w }
type :FILE = { w, l, l, l, l, w }
type :Array.0.11.1 = { w, w, l }
type :Array.0.15.1 = { w, w, l }
type :Array.0.2.15.1 = { w, w, l }
data $.3 = { b "true", b 0 }
data $.4 = { b "false", b 0 }
data $.66 = { b "w", b 0 }
data $.409 = { b "res <>= args.yield(string);", b 0 }
data $.410 = { b "res <>= args.yield(string);", b 0 }
data $.419 = { b "string", b 0 }
data $.420 = { b "string", b 0 }
data $.430 = { b "string.extend", b 0 }
data $.432 = { b "string", b 0 }
data $.796 = { b "*", b 0 }
data $.802 = { b "%p", b 0 }
data $.811 = { b "string", b 0 }
data $.818 = { b "\"", b 0 }
data $.819 = { b "\"", b 0 }
data $.821 = { b "\"\\\"\"", b 0 }
data $.822 = { b "arg", b 0 }
data $.823 = { b "\"\\\"\"", b 0 }
data $.833 = { b "string", b 0 }
data $.834 = { b "string", b 0 }
data $.835 = { b "string", b 0 }
data $.846 = { b "__to_string", b 0 }
data $.848 = { b "string", b 0 }
data $.859 = { b "i8", b 0 }
data $.865 = { b "%d", b 0 }
data $.874 = { b "i16", b 0 }
data $.880 = { b "%d", b 0 }
data $.889 = { b "i32", b 0 }
data $.895 = { b "%d", b 0 }
data $.904 = { b "i64", b 0 }
data $.910 = { b "%ld", b 0 }
data $.919 = { b "u8", b 0 }
data $.925 = { b "%u", b 0 }
data $.934 = { b "u16", b 0 }
data $.940 = { b "%u", b 0 }
data $.949 = { b "u32", b 0 }
data $.955 = { b "%u", b 0 }
data $.964 = { b "u64", b 0 }
data $.970 = { b "%lu", b 0 }
data $.981 = { b "f32", b 0 }
data $.984 = { b "f64", b 0 }
data $.990 = { b "%f", b 0 }
data $.992 = { b "f32", b 0 }
data $.1007 = { b "char", b 0 }
data $.1014 = { b "'%c'", b 0 }
data $.1016 = { b "%c", b 0 }
data $.1022 = { b "bool", b 0 }
data $.1030 = { b "%s", b 0 }
data $.1043 = { b "<%s at %p>", b 0 }
data $.1132 = { b "Invalid format at position '%d' (%c)\n", b 0 }
data $.1140 = { b "", b 0 }
data $.1155 = { b "result.extend(__to_string(meta.types[arg], args, wrapped));", b 0 }
data $.1156 = { b "__to_string(meta.types[arg], args, wrapped)", b 0 }
data $.1165 = { b "string*", b 0 }
data $.1166 = { b "string", b 0 }
data $.1176 = { b "__internal_fmt", b 0 }
data $.1178 = { b "string", b 0 }
data $.1239 = { b "{}", b 0 }
data $.1241 = { b "_", b 0 }
data $.1242 = { b "_", b 0 }
data $.1251 = { b "string", b 0 }
data $.1252 = { b "string", b 0 }
data $.1262 = { b "string.__fmt__", b 0 }
data $.1264 = { b "solution.le", b 0 }
data $.1623 = { b "{}", b 0 }
data $.1625 = { b "_", b 0 }
data $.1626 = { b "_", b 0 }
data $.1635 = { b "string", b 0 }
data $.1636 = { b "i32", b 0 }
data $.1646 = { b "i32.__fmt__", b 0 }
data $.1648 = { b "solution.le", b 0 }
data $.2183 = { b "string", b 0 }
data $.2187 = { b "string", b 0 }
data $.2193 = { b "[%s:%d:%d] %s %s = %s\n", b 0 }
data $.2201 = { b "%s", b 0 }
data $.2211 = { b "w", b 0 }
data $.2215 = { b "\x1b[31m[ERROR]: %s\x1b[0m", b 0 }
data $.2218 = { b "", b 0 }
data $.2253 = { b "string", b 0 }
data $.2257 = { b "error <>= res;", b 0 }
data $.2258 = { b "error <>= res;", b 0 }
data $.2267 = { b "string", b 0 }
data $.2268 = { b "string", b 0 }
data $.2278 = { b "__err", b 0 }
data $.2280 = { b "io", b 0 }
data $.2529 = { b "r", b 0 }
data $.2615 = { b "-0123456789", b 0 }
data $.2616 = { b "-0123456789", b 0 }
data $.2617 = { b "-0123456789.", b 0 }
data $.2627 = { b "i32", b 0 }
data $.2628 = { b "i64", b 0 }
data $.2629 = { b "f64", b 0 }
data $.2660 = { b " is not a valid type for casting. Falling back to 0", b 0 }
data $.2665 = { b "type", b 0 }
data $.2666 = { b "valid type for casting. Falling back to 0\"", b 0 }
data $.2667 = { b "type", b 0 }
data $.2677 = { b "string", b 0 }
data $.2678 = { b "string", b 0 }
data $.2679 = { b "string", b 0 }
data $.2690 = { b "is_valid", b 0 }
data $.2692 = { b "cast", b 0 }
data $.2697 = { b "Valid types:", b 0 }
data $.2700 = { b "Valid types:\"", b 0 }
data $.2708 = { b "string", b 0 }
data $.2717 = { b "is_valid", b 0 }
data $.2719 = { b "cast", b 0 }
data $.2732 = { b "-\t", b 0 }
data $.2740 = { b "\"-\\t\"", b 0 }
data $.2741 = { b "valid_types[i]", b 0 }
data $.2750 = { b "string", b 0 }
data $.2751 = { b "string", b 0 }
data $.2761 = { b "is_valid", b 0 }
data $.2763 = { b "cast", b 0 }
data $.2831 = { b "i32", b 0 }
data $.2893 = { b "mul(", b 0 }
data $.2931 = { b ",", b 0 }
data $.2941 = { b "", b 0 }
data $.2971 = { b "do()", b 0 }
data $.3022 = { b "don't()", b 0 }
data $.3031 = { b "input.txt", b 0 }
data $.3037 = { b "s1(contents)", b 0 }
data $.3045 = { b "i32", b 0 }
data $.3054 = { b "main", b 0 }
data $.3056 = { b "solution.le", b 0 }
data $.3064 = { b "s2(contents)", b 0 }
data $.3072 = { b "i32", b 0 }
data $.3081 = { b "main", b 0 }
data $.3083 = { b "solution.le", b 0 }
function l $bool.to_string(w %self.1) {
@start
	jnz %self.1, @ift.2, @iff.2
@ift.2
	ret $.3
@iff.2
	ret $.4
@end.2
	ret 0
}
function l $nil() {
@start
	ret 0
}
export function w $SEEK_SET() {
@start
	ret 0
}
export function w $SEEK_END() {
@start
	ret 2
}
export function l $stderr() {
@start
	%tmp.67 =l call $fdopen(l 2, l $.66)
	ret %tmp.67
}
export function l $string.len(l %self.111) {
@start
	%tmp.112 =l call $strlen(l %self.111)
	ret %tmp.112
}
export function w $string.contains(l %self.117, l %needle.118) {
@start
	%tmp.119 =l call $strstr(l %self.117, l %needle.118)
	%constant.120 =l call $nil()
	%tmp.121 =w cnel %tmp.119, %constant.120
	ret %tmp.121
}
export function w $string.starts_with(l %self.122, l %prefix.123) {
@start
	%tmp.124 =l call $string.len(l %prefix.123)
	%tmp.125 =w call $strncmp(l %prefix.123, l %self.122, l %tmp.124)
	%tmp.126 =w ceqw %tmp.125, 0
	ret %tmp.126
}
export function w $string.equals(l %self.146, l %other.147) {
@start
	%tmp.150 =w ceql %self.146, %other.147
	%or.149 =w copy 0
@or.left.148
	%or.left.151 =w ceqw %tmp.150, 0
	jnz %or.left.151, @or.right.148, @or.left.match.148
@or.right.148
	%tmp.152 =w call $strcmp(l %self.146, l %other.147)
	%tmp.153 =w ceqw %tmp.152, 0
	%or.right.154 =w ceqw %tmp.153, 0
	jnz %or.right.154, @or.end.148, @or.right.match.148
@or.left.match.148
	%or.149 =w copy %tmp.150
	jmp @or.end.148
@or.right.match.148
	%or.149 =w copy %tmp.153
	jmp @or.end.148
@or.end.148
	ret %or.149
}
export function l $string.slice(l %self.243, w %start.244, w %end.245) {
@start
	%tmp.247 =l call $string.len(l %self.243)
	%conv.248 =w copy %tmp.247
	%length.addr.249 =l alloc8 4
	storew %conv.248, %length.addr.249
	%tmp.254 =w csltw %start.244, 0
	%or.253 =w copy 0
@or.left.252
	%or.left.255 =w ceqw %tmp.254, 0
	jnz %or.left.255, @or.right.252, @or.left.match.252
@or.right.252
	%length.246 =w loadw %length.addr.249
	%tmp.256 =w csgtw %end.245, %length.246
	%or.right.257 =w ceqw %tmp.256, 0
	jnz %or.right.257, @or.end.252, @or.right.match.252
@or.left.match.252
	%or.253 =w copy %tmp.254
	jmp @or.end.252
@or.right.match.252
	%or.253 =w copy %tmp.256
	jmp @or.end.252
@or.end.252
	%or.251 =w copy 0
@or.left.250
	%or.left.258 =w ceqw %or.253, 0
	jnz %or.left.258, @or.right.250, @or.left.match.250
@or.right.250
	%tmp.259 =w csgtw %start.244, %end.245
	%or.right.260 =w ceqw %tmp.259, 0
	jnz %or.right.260, @or.end.250, @or.right.match.250
@or.left.match.250
	%or.251 =w copy %or.253
	jmp @or.end.250
@or.right.match.250
	%or.251 =w copy %tmp.259
	jmp @or.end.250
@or.end.250
	jnz %or.251, @ift.261, @end.261
@ift.261
	%constant.262 =l call $nil()
	ret %constant.262
@end.261
	%tmp.264 =w sub %end.245, %start.244
	%new_length.addr.265 =l alloc8 4
	storew %tmp.264, %new_length.addr.265
	%new_length.263 =w loadw %new_length.addr.265
	%conv.267 =l extsw %new_length.263
	%tmp.268 =l add %conv.267, 1
	%tmp.269 =l call $malloc(l %tmp.268)
	%sliced.addr.270 =l alloc8 8
	storel %tmp.269, %sliced.addr.270
	%sliced.266 =l loadl %sliced.addr.270
	%not.271 =w ceqw %sliced.266, 0
	jnz %not.271, @ift.272, @end.272
@ift.272
	%constant.273 =l call $nil()
	ret %constant.273
@end.272
	%i.addr.275 =l alloc8 4
	storew 0, %i.addr.275
@loop.276.cond
	%i.274 =w loadw %i.addr.275
	%new_length.263 =w loadw %new_length.addr.265
	%tmp.277 =w csltw %i.274, %new_length.263
	jnz %tmp.277, @loop.276.body, @loop.276.end
@loop.276.step
	%i.274 =w loadw %i.addr.275
	%tmp.278 =w add %i.274, 1
	storew %tmp.278, %i.addr.275
	%i.279 =w loadw %i.addr.275
	jmp @loop.276.cond
@loop.276.body
	%sliced.266 =l loadl %sliced.addr.270
	%i.279 =w loadw %i.addr.275
	%sliced.266 =l loadl %sliced.addr.270
	%i.279 =w loadw %i.addr.275
	%conv.280 =l extsw %i.279
	%tmp.281 =l mul 1, %conv.280
	%tmp.282 =l add %sliced.266, %tmp.281
	%i.279 =w loadw %i.addr.275
	%tmp.283 =w add %start.244, %i.279
	%i.279 =w loadw %i.addr.275
	%tmp.284 =w add %start.244, %i.279
	%conv.285 =l extsw %tmp.284
	%tmp.286 =l mul 1, %conv.285
	%tmp.287 =l add %self.243, %tmp.286
	%load.288 =w loadsb %tmp.287
	storeb %load.288, %tmp.282
	jmp @loop.276.step
@loop.276.end
	%sliced.266 =l loadl %sliced.addr.270
	%new_length.263 =w loadw %new_length.addr.265
	%sliced.266 =l loadl %sliced.addr.270
	%new_length.263 =w loadw %new_length.addr.265
	%conv.289 =l extsw %new_length.263
	%tmp.290 =l mul 1, %conv.289
	%tmp.291 =l add %sliced.266, %tmp.290
	storeb 0, %tmp.291
	%sliced.266 =l loadl %sliced.addr.270
	ret %sliced.266
}
export function l $string.concat(:ElleMeta %meta.292, ...) {
@start
	%offset.293 =l add %meta.292, 16
	%field.294 =w loadw %offset.293
	%conv.295 =l extsw %field.294
	%args.296 =l alloc8 %conv.295
	vastart %args.296
	%offset.297 =l add %meta.292, 16
	%field.298 =w loadw %offset.297
	%conv.299 =l extsw %field.298
	%tmp.300 =l mul %conv.299, 8
	%strings.301 =l alloc8 %tmp.300
	%offset.302 =l add %meta.292, 16
	%field.303 =w loadw %offset.302
	%conv.304 =l extsw %field.303
	%tmp.305 =l mul %conv.304, 4
	%sizes.306 =l alloc8 %tmp.305
	%length.addr.308 =l alloc8 8
	storel 0, %length.addr.308
	%i.addr.310 =l alloc8 4
	storew 0, %i.addr.310
@loop.311.cond
	%i.309 =w loadw %i.addr.310
	%offset.312 =l add %meta.292, 16
	%field.313 =w loadw %offset.312
	%tmp.314 =w csltw %i.309, %field.313
	jnz %tmp.314, @loop.311.body, @loop.311.end
@loop.311.step
	%i.309 =w loadw %i.addr.310
	%tmp.315 =w add %i.309, 1
	storew %tmp.315, %i.addr.310
	%i.316 =w loadw %i.addr.310
	jmp @loop.311.cond
@loop.311.body
	%i.316 =w loadw %i.addr.310
	%i.316 =w loadw %i.addr.310
	%conv.317 =l extsw %i.316
	%tmp.318 =l mul 8, %conv.317
	%tmp.319 =l add %strings.301, %tmp.318
	%next.320 =l vaarg %args.296
	storel %next.320, %tmp.319
	%i.316 =w loadw %i.addr.310
	%i.316 =w loadw %i.addr.310
	%conv.321 =l extsw %i.316
	%tmp.322 =l mul 4, %conv.321
	%tmp.323 =l add %sizes.306, %tmp.322
	%i.316 =w loadw %i.addr.310
	%i.316 =w loadw %i.addr.310
	%conv.328 =l extsw %i.316
	%tmp.329 =l mul 8, %conv.328
	%tmp.330 =l add %strings.301, %tmp.329
	%load.331 =l loadl %tmp.330
	%tmp.332 =l call $string.len(l %load.331)
	storew %tmp.332, %tmp.323
	%length.307 =l loadl %length.addr.308
	%i.316 =w loadw %i.addr.310
	%i.316 =w loadw %i.addr.310
	%conv.333 =l extsw %i.316
	%tmp.334 =l mul 4, %conv.333
	%tmp.335 =l add %sizes.306, %tmp.334
	%load.336 =w loadw %tmp.335
	%conv.337 =l extsw %load.336
	%tmp.338 =l add %length.307, %conv.337
	storel %tmp.338, %length.addr.308
	%length.339 =l loadl %length.addr.308
	jmp @loop.311.step
@loop.311.end
	%length.307 =l loadl %length.addr.308
	%tmp.341 =l add %length.307, 1
	%size.342 =l copy 1
	%tmp.343 =l mul %tmp.341, %size.342
	%tmp.344 =l call $malloc(l %tmp.343)
	%result.addr.345 =l alloc8 8
	storel %tmp.344, %result.addr.345
	%result.340 =l loadl %result.addr.345
	%not.346 =w ceqw %result.340, 0
	jnz %not.346, @ift.347, @end.347
@ift.347
	%constant.348 =l call $nil()
	ret %constant.348
@end.347
	%index.addr.350 =l alloc8 4
	storew 0, %index.addr.350
	storew 0, %i.addr.310
	%i.351 =w loadw %i.addr.310
@loop.352.cond
	%i.351 =w loadw %i.addr.310
	%offset.353 =l add %meta.292, 16
	%field.354 =w loadw %offset.353
	%tmp.355 =w csltw %i.351, %field.354
	jnz %tmp.355, @loop.352.body, @loop.352.end
@loop.352.step
	%i.351 =w loadw %i.addr.310
	%tmp.356 =w add %i.351, 1
	storew %tmp.356, %i.addr.310
	%i.357 =w loadw %i.addr.310
	jmp @loop.352.cond
@loop.352.body
	%i.357 =w loadw %i.addr.310
	%i.357 =w loadw %i.addr.310
	%conv.359 =l extsw %i.357
	%tmp.360 =l mul 8, %conv.359
	%tmp.361 =l add %strings.301, %tmp.360
	%load.362 =l loadl %tmp.361
	%current.addr.363 =l alloc8 8
	storel %load.362, %current.addr.363
	%j.addr.365 =l alloc8 4
	storew 0, %j.addr.365
@loop.366.cond
	%j.364 =w loadw %j.addr.365
	%i.357 =w loadw %i.addr.310
	%i.357 =w loadw %i.addr.310
	%conv.367 =l extsw %i.357
	%tmp.368 =l mul 4, %conv.367
	%tmp.369 =l add %sizes.306, %tmp.368
	%load.370 =w loadw %tmp.369
	%tmp.371 =w csltw %j.364, %load.370
	jnz %tmp.371, @loop.366.body, @loop.366.end
@loop.366.step
	%j.364 =w loadw %j.addr.365
	%tmp.372 =w add %j.364, 1
	storew %tmp.372, %j.addr.365
	%j.373 =w loadw %j.addr.365
	jmp @loop.366.cond
@loop.366.body
	%result.340 =l loadl %result.addr.345
	%index.349 =w loadw %index.addr.350
	%result.340 =l loadl %result.addr.345
	%index.349 =w loadw %index.addr.350
	%conv.374 =l extsw %index.349
	%tmp.375 =l mul 1, %conv.374
	%tmp.376 =l add %result.340, %tmp.375
	%current.358 =l loadl %current.addr.363
	%j.373 =w loadw %j.addr.365
	%current.358 =l loadl %current.addr.363
	%j.373 =w loadw %j.addr.365
	%conv.377 =l extsw %j.373
	%tmp.378 =l mul 1, %conv.377
	%tmp.379 =l add %current.358, %tmp.378
	%load.380 =w loadsb %tmp.379
	storeb %load.380, %tmp.376
	%index.349 =w loadw %index.addr.350
	%tmp.381 =w add %index.349, 1
	storew %tmp.381, %index.addr.350
	%index.382 =w loadw %index.addr.350
	jmp @loop.366.step
@loop.366.end
	jmp @loop.352.step
@loop.352.end
	%result.340 =l loadl %result.addr.345
	%index.349 =w loadw %index.addr.350
	%result.340 =l loadl %result.addr.345
	%index.349 =w loadw %index.addr.350
	%conv.383 =l extsw %index.349
	%tmp.384 =l mul 1, %conv.383
	%tmp.385 =l add %result.340, %tmp.384
	storeb 0, %tmp.385
	%result.340 =l loadl %result.addr.345
	ret %result.340
}
export function w $string.extend(:ElleMeta %meta.386, l %self.387, ...) {
@start
	%offset.388 =l add %meta.386, 16
	%field.389 =w loadw %offset.388
	%tmp.390 =w sub %field.389, 1
	%conv.391 =l extsw %tmp.390
	%args.392 =l alloc8 %conv.391
	vastart %args.392
	%tmp.394 =l mul 8, 0
	%tmp.395 =l add %self.387, %tmp.394
	%load.396 =l loadl %tmp.395
	%res.addr.397 =l alloc8 8
	storel %load.396, %res.addr.397
	%i.addr.399 =l alloc8 4
	storew 0, %i.addr.399
@loop.400.cond
	%i.398 =w loadw %i.addr.399
	%offset.401 =l add %meta.386, 16
	%field.402 =w loadw %offset.401
	%tmp.403 =w sub %field.402, 1
	%tmp.404 =w csltw %i.398, %tmp.403
	jnz %tmp.404, @loop.400.body, @loop.400.end
@loop.400.step
	%i.398 =w loadw %i.addr.399
	%tmp.405 =w add %i.398, 1
	storew %tmp.405, %i.addr.399
	%i.406 =w loadw %i.addr.399
	jmp @loop.400.cond
@loop.400.body
	%res.393 =l loadl %res.addr.397
	%next.407 =l vaarg %args.392
	%struct.ElleMeta.408 =l alloc8 44
	%conv.411 =l extsw 2
	%tmp.412 =l mul 8, %conv.411
	%tmp.414 =l add %tmp.412, 4
	%array.full.413 =l alloc8 %tmp.414
	storew 2, %array.full.413
	%array.415 =l add %array.full.413, 4
	%array.offset.416 =l add %array.415, 0
	storel $.409, %array.offset.416
	%array.offset.417 =l add %array.415, 8
	storel $.410, %array.offset.417
	%offset.418 =l add %struct.ElleMeta.408, 0
	storel %array.415, %offset.418
	%conv.421 =l extsw 2
	%tmp.422 =l mul 8, %conv.421
	%tmp.424 =l add %tmp.422, 4
	%array.full.423 =l alloc8 %tmp.424
	storew 2, %array.full.423
	%array.425 =l add %array.full.423, 4
	%array.offset.426 =l add %array.425, 0
	storel $.419, %array.offset.426
	%array.offset.427 =l add %array.425, 8
	storel $.420, %array.offset.427
	%offset.428 =l add %struct.ElleMeta.408, 8
	storel %array.425, %offset.428
	%offset.429 =l add %struct.ElleMeta.408, 16
	storew 2, %offset.429
	%offset.431 =l add %struct.ElleMeta.408, 20
	storel $.430, %offset.431
	%offset.433 =l add %struct.ElleMeta.408, 28
	storel $.432, %offset.433
	%offset.434 =l add %struct.ElleMeta.408, 36
	storew 164, %offset.434
	%offset.435 =l add %struct.ElleMeta.408, 40
	storew 12, %offset.435
	%tmp.436 =l call $string.concat(:ElleMeta %struct.ElleMeta.408, ..., l %res.393, l %next.407)
	storel %tmp.436, %res.addr.397
	%res.437 =l loadl %res.addr.397
	jmp @loop.400.step
@loop.400.end
	%tmp.438 =l mul 8, 0
	%tmp.439 =l add %self.387, %tmp.438
	%res.393 =l loadl %res.addr.397
	storel %res.393, %tmp.439
	ret 0
}
export function l $string.push(l %self.749, w %c.750) {
@start
	%tmp.755 =l mul 8, 0
	%tmp.756 =l add %self.749, %tmp.755
	%load.757 =l loadl %tmp.756
	%tmp.758 =l call $string.len(l %load.757)
	%conv.759 =w copy %tmp.758
	%length.addr.760 =l alloc8 4
	storew %conv.759, %length.addr.760
	%length.751 =w loadw %length.addr.760
	%conv.762 =l extsw %length.751
	%tmp.763 =l add %conv.762, 2
	%size.764 =l copy 1
	%tmp.765 =l mul %tmp.763, %size.764
	%tmp.766 =l call $malloc(l %tmp.765)
	%result.addr.767 =l alloc8 8
	storel %tmp.766, %result.addr.767
	%result.761 =l loadl %result.addr.767
	%not.768 =w ceqw %result.761, 0
	jnz %not.768, @ift.769, @end.769
@ift.769
	%constant.770 =l call $nil()
	ret %constant.770
@end.769
	%result.761 =l loadl %result.addr.767
	%tmp.771 =l mul 8, 0
	%tmp.772 =l add %self.749, %tmp.771
	%load.773 =l loadl %tmp.772
	%tmp.774 =l call $strcpy(l %result.761, l %load.773)
	%result.761 =l loadl %result.addr.767
	%length.751 =w loadw %length.addr.760
	%result.761 =l loadl %result.addr.767
	%length.751 =w loadw %length.addr.760
	%conv.775 =l extsw %length.751
	%tmp.776 =l mul 1, %conv.775
	%tmp.777 =l add %result.761, %tmp.776
	storeb %c.750, %tmp.777
	%result.761 =l loadl %result.addr.767
	%length.751 =w loadw %length.addr.760
	%tmp.778 =w add %length.751, 1
	%result.761 =l loadl %result.addr.767
	%length.751 =w loadw %length.addr.760
	%tmp.779 =w add %length.751, 1
	%conv.780 =l extsw %tmp.779
	%tmp.781 =l mul 1, %conv.780
	%tmp.782 =l add %result.761, %tmp.781
	storeb 0, %tmp.782
	%tmp.783 =l mul 8, 0
	%tmp.784 =l add %self.749, %tmp.783
	%result.761 =l loadl %result.addr.767
	storel %result.761, %tmp.784
	ret 0
}
export function l $__to_string(l %ty.785, l %args.786, w %wrap.787) {
@start
	%constant.789 =l call $nil()
	%res.addr.790 =l alloc8 8
	storel %constant.789, %res.addr.790
	%constant.792 =l call $nil()
	%fmt.addr.793 =l alloc8 8
	storel %constant.792, %fmt.addr.793
	%length.addr.795 =l alloc8 4
	storew 0, %length.addr.795
	%tmp.797 =w call $string.contains(l %ty.785, l $.796)
	jnz %tmp.797, @ift.798, @end.798
@ift.798
	%next.800 =l vaarg %args.786
	%arg.addr.801 =l alloc8 8
	storel %next.800, %arg.addr.801
	storel $.802, %fmt.addr.793
	%fmt.803 =l loadl %fmt.addr.793
	%constant.804 =l call $nil()
	%fmt.803 =l loadl %fmt.addr.793
	%arg.799 =l loadl %arg.addr.801
	%tmp.805 =w call $snprintf(l %constant.804, w 0, l %fmt.803, ..., l %arg.799)
	storew %tmp.805, %length.addr.795
	%length.806 =w loadw %length.addr.795
	%length.806 =w loadw %length.addr.795
	%conv.807 =l extsw %length.806
	%tmp.808 =l call $malloc(l %conv.807)
	storel %tmp.808, %res.addr.790
	%res.809 =l loadl %res.addr.790
	%res.809 =l loadl %res.addr.790
	%fmt.803 =l loadl %fmt.addr.793
	%arg.799 =l loadl %arg.addr.801
	%tmp.810 =w call $sprintf(l %res.809, l %fmt.803, ..., l %arg.799)
	%res.809 =l loadl %res.addr.790
	ret %res.809
@end.798
	%tmp.812 =w call $string.starts_with(l %ty.785, l $.811)
	jnz %tmp.812, @ift.813, @end.813
@ift.813
	%next.815 =l vaarg %args.786
	%arg.addr.816 =l alloc8 8
	storel %next.815, %arg.addr.816
	jnz %wrap.787, @ift.817, @end.817
@ift.817
	%arg.814 =l loadl %arg.addr.816
	%struct.ElleMeta.820 =l alloc8 44
	%conv.824 =l extsw 3
	%tmp.825 =l mul 8, %conv.824
	%tmp.827 =l add %tmp.825, 4
	%array.full.826 =l alloc8 %tmp.827
	storew 3, %array.full.826
	%array.828 =l add %array.full.826, 4
	%array.offset.829 =l add %array.828, 0
	storel $.821, %array.offset.829
	%array.offset.830 =l add %array.828, 8
	storel $.822, %array.offset.830
	%array.offset.831 =l add %array.828, 16
	storel $.823, %array.offset.831
	%offset.832 =l add %struct.ElleMeta.820, 0
	storel %array.828, %offset.832
	%conv.836 =l extsw 3
	%tmp.837 =l mul 8, %conv.836
	%tmp.839 =l add %tmp.837, 4
	%array.full.838 =l alloc8 %tmp.839
	storew 3, %array.full.838
	%array.840 =l add %array.full.838, 4
	%array.offset.841 =l add %array.840, 0
	storel $.833, %array.offset.841
	%array.offset.842 =l add %array.840, 8
	storel $.834, %array.offset.842
	%array.offset.843 =l add %array.840, 16
	storel $.835, %array.offset.843
	%offset.844 =l add %struct.ElleMeta.820, 8
	storel %array.840, %offset.844
	%offset.845 =l add %struct.ElleMeta.820, 16
	storew 3, %offset.845
	%offset.847 =l add %struct.ElleMeta.820, 20
	storel $.846, %offset.847
	%offset.849 =l add %struct.ElleMeta.820, 28
	storel $.848, %offset.849
	%offset.850 =l add %struct.ElleMeta.820, 36
	storew 354, %offset.850
	%offset.851 =l add %struct.ElleMeta.820, 40
	storew 34, %offset.851
	%tmp.852 =l call $string.concat(:ElleMeta %struct.ElleMeta.820, ..., l $.818, l %arg.814, l $.819)
	storel %tmp.852, %arg.addr.816
	%arg.853 =l loadl %arg.addr.816
@end.817
	%arg.814 =l loadl %arg.addr.816
	%tmp.854 =l call $string.len(l %arg.814)
	%tmp.855 =l add %tmp.854, 1
	%tmp.856 =l call $malloc(l %tmp.855)
	storel %tmp.856, %res.addr.790
	%res.857 =l loadl %res.addr.790
	%res.857 =l loadl %res.addr.790
	%arg.814 =l loadl %arg.addr.816
	%tmp.858 =l call $strcpy(l %res.857, l %arg.814)
	%res.857 =l loadl %res.addr.790
	ret %res.857
@end.813
	%tmp.860 =w call $string.starts_with(l %ty.785, l $.859)
	jnz %tmp.860, @ift.861, @end.861
@ift.861
	%next.863 =w vaarg %args.786
	%arg.addr.864 =l alloc8 4
	storew %next.863, %arg.addr.864
	storel $.865, %fmt.addr.793
	%fmt.866 =l loadl %fmt.addr.793
	%constant.867 =l call $nil()
	%fmt.866 =l loadl %fmt.addr.793
	%arg.862 =w loadw %arg.addr.864
	%tmp.868 =w call $snprintf(l %constant.867, w 0, l %fmt.866, ..., w %arg.862)
	storew %tmp.868, %length.addr.795
	%length.869 =w loadw %length.addr.795
	%length.869 =w loadw %length.addr.795
	%conv.870 =l extsw %length.869
	%tmp.871 =l call $malloc(l %conv.870)
	storel %tmp.871, %res.addr.790
	%res.872 =l loadl %res.addr.790
	%res.872 =l loadl %res.addr.790
	%fmt.866 =l loadl %fmt.addr.793
	%arg.862 =w loadw %arg.addr.864
	%tmp.873 =w call $sprintf(l %res.872, l %fmt.866, ..., w %arg.862)
@end.861
	%tmp.875 =w call $string.starts_with(l %ty.785, l $.874)
	jnz %tmp.875, @ift.876, @end.876
@ift.876
	%next.878 =w vaarg %args.786
	%arg.addr.879 =l alloc8 4
	storew %next.878, %arg.addr.879
	storel $.880, %fmt.addr.793
	%fmt.881 =l loadl %fmt.addr.793
	%constant.882 =l call $nil()
	%fmt.881 =l loadl %fmt.addr.793
	%arg.877 =w loadw %arg.addr.879
	%tmp.883 =w call $snprintf(l %constant.882, w 0, l %fmt.881, ..., w %arg.877)
	storew %tmp.883, %length.addr.795
	%length.884 =w loadw %length.addr.795
	%length.884 =w loadw %length.addr.795
	%conv.885 =l extsw %length.884
	%tmp.886 =l call $malloc(l %conv.885)
	storel %tmp.886, %res.addr.790
	%res.887 =l loadl %res.addr.790
	%res.887 =l loadl %res.addr.790
	%fmt.881 =l loadl %fmt.addr.793
	%arg.877 =w loadw %arg.addr.879
	%tmp.888 =w call $sprintf(l %res.887, l %fmt.881, ..., w %arg.877)
@end.876
	%tmp.890 =w call $string.starts_with(l %ty.785, l $.889)
	jnz %tmp.890, @ift.891, @end.891
@ift.891
	%next.893 =w vaarg %args.786
	%arg.addr.894 =l alloc8 4
	storew %next.893, %arg.addr.894
	storel $.895, %fmt.addr.793
	%fmt.896 =l loadl %fmt.addr.793
	%constant.897 =l call $nil()
	%fmt.896 =l loadl %fmt.addr.793
	%arg.892 =w loadw %arg.addr.894
	%tmp.898 =w call $snprintf(l %constant.897, w 0, l %fmt.896, ..., w %arg.892)
	storew %tmp.898, %length.addr.795
	%length.899 =w loadw %length.addr.795
	%length.899 =w loadw %length.addr.795
	%conv.900 =l extsw %length.899
	%tmp.901 =l call $malloc(l %conv.900)
	storel %tmp.901, %res.addr.790
	%res.902 =l loadl %res.addr.790
	%res.902 =l loadl %res.addr.790
	%fmt.896 =l loadl %fmt.addr.793
	%arg.892 =w loadw %arg.addr.894
	%tmp.903 =w call $sprintf(l %res.902, l %fmt.896, ..., w %arg.892)
@end.891
	%tmp.905 =w call $string.starts_with(l %ty.785, l $.904)
	jnz %tmp.905, @ift.906, @end.906
@ift.906
	%next.908 =l vaarg %args.786
	%arg.addr.909 =l alloc8 8
	storel %next.908, %arg.addr.909
	storel $.910, %fmt.addr.793
	%fmt.911 =l loadl %fmt.addr.793
	%constant.912 =l call $nil()
	%fmt.911 =l loadl %fmt.addr.793
	%arg.907 =l loadl %arg.addr.909
	%tmp.913 =w call $snprintf(l %constant.912, w 0, l %fmt.911, ..., l %arg.907)
	storew %tmp.913, %length.addr.795
	%length.914 =w loadw %length.addr.795
	%length.914 =w loadw %length.addr.795
	%conv.915 =l extsw %length.914
	%tmp.916 =l call $malloc(l %conv.915)
	storel %tmp.916, %res.addr.790
	%res.917 =l loadl %res.addr.790
	%res.917 =l loadl %res.addr.790
	%fmt.911 =l loadl %fmt.addr.793
	%arg.907 =l loadl %arg.addr.909
	%tmp.918 =w call $sprintf(l %res.917, l %fmt.911, ..., l %arg.907)
@end.906
	%tmp.920 =w call $string.starts_with(l %ty.785, l $.919)
	jnz %tmp.920, @ift.921, @end.921
@ift.921
	%next.923 =w vaarg %args.786
	%arg.addr.924 =l alloc8 4
	storew %next.923, %arg.addr.924
	storel $.925, %fmt.addr.793
	%fmt.926 =l loadl %fmt.addr.793
	%constant.927 =l call $nil()
	%fmt.926 =l loadl %fmt.addr.793
	%arg.922 =w loadw %arg.addr.924
	%tmp.928 =w call $snprintf(l %constant.927, w 0, l %fmt.926, ..., w %arg.922)
	storew %tmp.928, %length.addr.795
	%length.929 =w loadw %length.addr.795
	%length.929 =w loadw %length.addr.795
	%conv.930 =l extsw %length.929
	%tmp.931 =l call $malloc(l %conv.930)
	storel %tmp.931, %res.addr.790
	%res.932 =l loadl %res.addr.790
	%res.932 =l loadl %res.addr.790
	%fmt.926 =l loadl %fmt.addr.793
	%arg.922 =w loadw %arg.addr.924
	%tmp.933 =w call $sprintf(l %res.932, l %fmt.926, ..., w %arg.922)
@end.921
	%tmp.935 =w call $string.starts_with(l %ty.785, l $.934)
	jnz %tmp.935, @ift.936, @end.936
@ift.936
	%next.938 =w vaarg %args.786
	%arg.addr.939 =l alloc8 4
	storew %next.938, %arg.addr.939
	storel $.940, %fmt.addr.793
	%fmt.941 =l loadl %fmt.addr.793
	%constant.942 =l call $nil()
	%fmt.941 =l loadl %fmt.addr.793
	%arg.937 =w loadw %arg.addr.939
	%tmp.943 =w call $snprintf(l %constant.942, w 0, l %fmt.941, ..., w %arg.937)
	storew %tmp.943, %length.addr.795
	%length.944 =w loadw %length.addr.795
	%length.944 =w loadw %length.addr.795
	%conv.945 =l extsw %length.944
	%tmp.946 =l call $malloc(l %conv.945)
	storel %tmp.946, %res.addr.790
	%res.947 =l loadl %res.addr.790
	%res.947 =l loadl %res.addr.790
	%fmt.941 =l loadl %fmt.addr.793
	%arg.937 =w loadw %arg.addr.939
	%tmp.948 =w call $sprintf(l %res.947, l %fmt.941, ..., w %arg.937)
@end.936
	%tmp.950 =w call $string.starts_with(l %ty.785, l $.949)
	jnz %tmp.950, @ift.951, @end.951
@ift.951
	%next.953 =w vaarg %args.786
	%arg.addr.954 =l alloc8 4
	storew %next.953, %arg.addr.954
	storel $.955, %fmt.addr.793
	%fmt.956 =l loadl %fmt.addr.793
	%constant.957 =l call $nil()
	%fmt.956 =l loadl %fmt.addr.793
	%arg.952 =w loadw %arg.addr.954
	%tmp.958 =w call $snprintf(l %constant.957, w 0, l %fmt.956, ..., w %arg.952)
	storew %tmp.958, %length.addr.795
	%length.959 =w loadw %length.addr.795
	%length.959 =w loadw %length.addr.795
	%conv.960 =l extsw %length.959
	%tmp.961 =l call $malloc(l %conv.960)
	storel %tmp.961, %res.addr.790
	%res.962 =l loadl %res.addr.790
	%res.962 =l loadl %res.addr.790
	%fmt.956 =l loadl %fmt.addr.793
	%arg.952 =w loadw %arg.addr.954
	%tmp.963 =w call $sprintf(l %res.962, l %fmt.956, ..., w %arg.952)
@end.951
	%tmp.965 =w call $string.starts_with(l %ty.785, l $.964)
	jnz %tmp.965, @ift.966, @end.966
@ift.966
	%next.968 =l vaarg %args.786
	%arg.addr.969 =l alloc8 8
	storel %next.968, %arg.addr.969
	storel $.970, %fmt.addr.793
	%fmt.971 =l loadl %fmt.addr.793
	%constant.972 =l call $nil()
	%fmt.971 =l loadl %fmt.addr.793
	%arg.967 =l loadl %arg.addr.969
	%tmp.973 =w call $snprintf(l %constant.972, w 0, l %fmt.971, ..., l %arg.967)
	storew %tmp.973, %length.addr.795
	%length.974 =w loadw %length.addr.795
	%length.974 =w loadw %length.addr.795
	%conv.975 =l extsw %length.974
	%tmp.976 =l call $malloc(l %conv.975)
	storel %tmp.976, %res.addr.790
	%res.977 =l loadl %res.addr.790
	%res.977 =l loadl %res.addr.790
	%fmt.971 =l loadl %fmt.addr.793
	%arg.967 =l loadl %arg.addr.969
	%tmp.978 =w call $sprintf(l %res.977, l %fmt.971, ..., l %arg.967)
@end.966
	%tmp.982 =w call $string.starts_with(l %ty.785, l $.981)
	%or.980 =w copy 0
@or.left.979
	%or.left.983 =w ceqw %tmp.982, 0
	jnz %or.left.983, @or.right.979, @or.left.match.979
@or.right.979
	%tmp.985 =w call $string.starts_with(l %ty.785, l $.984)
	%or.right.986 =w ceqw %tmp.985, 0
	jnz %or.right.986, @or.end.979, @or.right.match.979
@or.left.match.979
	%or.980 =w copy %tmp.982
	jmp @or.end.979
@or.right.match.979
	%or.980 =w copy %tmp.985
	jmp @or.end.979
@or.end.979
	jnz %or.980, @ift.987, @end.987
@ift.987
	%arg.addr.989 =l alloc8 8
	stored d_0, %arg.addr.989
	storel $.990, %fmt.addr.793
	%fmt.991 =l loadl %fmt.addr.793
	%tmp.993 =w call $string.starts_with(l %ty.785, l $.992)
	jnz %tmp.993, @ift.994, @iff.994
@ift.994
	%next.995 =s vaarg %args.786
	%conv.996 =d exts %next.995
	stored %conv.996, %arg.addr.989
	%arg.997 =d loadd %arg.addr.989
	jmp @end.994
@iff.994
	%next.998 =d vaarg %args.786
	stored %next.998, %arg.addr.989
	%arg.999 =d loadd %arg.addr.989
@end.994
	%constant.1000 =l call $nil()
	%fmt.991 =l loadl %fmt.addr.793
	%arg.988 =d loadd %arg.addr.989
	%tmp.1001 =w call $snprintf(l %constant.1000, w 0, l %fmt.991, ..., d %arg.988)
	storew %tmp.1001, %length.addr.795
	%length.1002 =w loadw %length.addr.795
	%length.1002 =w loadw %length.addr.795
	%conv.1003 =l extsw %length.1002
	%tmp.1004 =l call $malloc(l %conv.1003)
	storel %tmp.1004, %res.addr.790
	%res.1005 =l loadl %res.addr.790
	%res.1005 =l loadl %res.addr.790
	%fmt.991 =l loadl %fmt.addr.793
	%arg.988 =d loadd %arg.addr.989
	%tmp.1006 =w call $sprintf(l %res.1005, l %fmt.991, ..., d %arg.988)
@end.987
	%tmp.1008 =w call $string.starts_with(l %ty.785, l $.1007)
	jnz %tmp.1008, @ift.1009, @end.1009
@ift.1009
	%next.1011 =w vaarg %args.786
	%arg.addr.1012 =l alloc8 1
	storeb %next.1011, %arg.addr.1012
	jnz %wrap.787, @ift.1013, @iff.1013
@ift.1013
	storel $.1014, %fmt.addr.793
	%fmt.1015 =l loadl %fmt.addr.793
	jmp @end.1013
@iff.1013
	storel $.1016, %fmt.addr.793
	%fmt.1017 =l loadl %fmt.addr.793
@end.1013
	%length.794 =w loadw %length.addr.795
	%conv.1018 =l extsw %length.794
	%tmp.1019 =l call $malloc(l %conv.1018)
	storel %tmp.1019, %res.addr.790
	%res.1020 =l loadl %res.addr.790
	%res.1020 =l loadl %res.addr.790
	%fmt.791 =l loadl %fmt.addr.793
	%arg.1010 =w loadsb %arg.addr.1012
	%tmp.1021 =w call $sprintf(l %res.1020, l %fmt.791, ..., w %arg.1010)
@end.1009
	%tmp.1023 =w call $string.starts_with(l %ty.785, l $.1022)
	jnz %tmp.1023, @ift.1024, @end.1024
@ift.1024
	%next.1027 =w vaarg %args.786
	%tmp.1028 =l call $bool.to_string(w %next.1027)
	%arg.addr.1029 =l alloc8 8
	storel %tmp.1028, %arg.addr.1029
	storel $.1030, %fmt.addr.793
	%fmt.1031 =l loadl %fmt.addr.793
	%arg.1025 =l loadl %arg.addr.1029
	%tmp.1032 =l call $string.len(l %arg.1025)
	%tmp.1033 =l add %tmp.1032, 1
	%tmp.1034 =l call $malloc(l %tmp.1033)
	storel %tmp.1034, %res.addr.790
	%res.1035 =l loadl %res.addr.790
	%res.1035 =l loadl %res.addr.790
	%fmt.1031 =l loadl %fmt.addr.793
	%arg.1025 =l loadl %arg.addr.1029
	%tmp.1036 =w call $sprintf(l %res.1035, l %fmt.1031, ..., l %arg.1025)
@end.1024
	%res.788 =l loadl %res.addr.790
	%constant.1037 =l call $nil()
	%tmp.1038 =w ceql %res.788, %constant.1037
	jnz %tmp.1038, @ift.1039, @end.1039
@ift.1039
	%next.1041 =l vaarg %args.786
	%arg.addr.1042 =l alloc8 8
	storel %next.1041, %arg.addr.1042
	storel $.1043, %fmt.addr.793
	%fmt.1044 =l loadl %fmt.addr.793
	%constant.1045 =l call $nil()
	%fmt.1044 =l loadl %fmt.addr.793
	%arg.1040 =l loadl %arg.addr.1042
	%tmp.1046 =w call $snprintf(l %constant.1045, w 0, l %fmt.1044, ..., l %ty.785, l %arg.1040)
	storew %tmp.1046, %length.addr.795
	%length.1047 =w loadw %length.addr.795
	%length.1047 =w loadw %length.addr.795
	%conv.1048 =l extsw %length.1047
	%tmp.1049 =l call $malloc(l %conv.1048)
	storel %tmp.1049, %res.addr.790
	%res.1050 =l loadl %res.addr.790
	%res.1050 =l loadl %res.addr.790
	%fmt.1044 =l loadl %fmt.addr.793
	%arg.1040 =l loadl %arg.addr.1042
	%tmp.1051 =w call $sprintf(l %res.1050, l %fmt.1044, ..., l %ty.785, l %arg.1040)
@end.1039
	%res.788 =l loadl %res.addr.790
	ret %res.788
}
export function l $__internal_fmt(l %fmt.1084, :ElleMeta %meta.1085, l %args.1086) {
@start
	%tmp.1088 =l call $string.len(l %fmt.1084)
	%tmp.1089 =l call $malloc(l %tmp.1088)
	%result.addr.1090 =l alloc8 8
	storel %tmp.1089, %result.addr.1090
	%arg.addr.1092 =l alloc8 4
	storew 0, %arg.addr.1092
	%is_open.addr.1094 =l alloc8 4
	storew 0, %is_open.addr.1094
	%wrapped.addr.1096 =l alloc8 4
	storew 0, %wrapped.addr.1096
	%i.addr.1098 =l alloc8 4
	storew 0, %i.addr.1098
@loop.1099.cond
	%i.1097 =w loadw %i.addr.1098
	%tmp.1100 =l call $string.len(l %fmt.1084)
	%conv.1101 =l extsw %i.1097
	%tmp.1102 =w csltl %conv.1101, %tmp.1100
	jnz %tmp.1102, @loop.1099.body, @loop.1099.end
@loop.1099.step
	%i.1097 =w loadw %i.addr.1098
	%tmp.1103 =w add %i.1097, 1
	storew %tmp.1103, %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	jmp @loop.1099.cond
@loop.1099.body
	%is_open.1093 =w loadsw %is_open.addr.1094
	jnz %is_open.1093, @ift.1105, @end.1105
@ift.1105
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1106 =l extsw %i.1104
	%tmp.1107 =l mul 1, %conv.1106
	%tmp.1108 =l add %fmt.1084, %tmp.1107
	%load.1109 =w loadsb %tmp.1108
	%tmp.1110 =w ceqw %load.1109, 123
	jnz %tmp.1110, @ift.1111, @end.1111
@ift.1111
	storew 0, %is_open.addr.1094
	%is_open.1112 =w loadsw %is_open.addr.1094
	%result.1087 =l loadl %result.addr.1090
	%result.1087 =l loadl %result.addr.1090
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1113 =l extsw %i.1104
	%tmp.1114 =l mul 1, %conv.1113
	%tmp.1115 =l add %fmt.1084, %tmp.1114
	%load.1116 =w loadsb %tmp.1115
	%tmp.1117 =l call $string.push(l %result.addr.1090, w %load.1116)
	jmp @loop.1099.step
@end.1111
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1118 =l extsw %i.1104
	%tmp.1119 =l mul 1, %conv.1118
	%tmp.1120 =l add %fmt.1084, %tmp.1119
	%load.1121 =w loadsb %tmp.1120
	%tmp.1122 =w ceqw %load.1121, 58
	jnz %tmp.1122, @ift.1123, @end.1123
@ift.1123
	storew 1, %wrapped.addr.1096
	%wrapped.1124 =w loadsw %wrapped.addr.1096
	jmp @loop.1099.step
@end.1123
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1125 =l extsw %i.1104
	%tmp.1126 =l mul 1, %conv.1125
	%tmp.1127 =l add %fmt.1084, %tmp.1126
	%load.1128 =w loadsb %tmp.1127
	%tmp.1129 =w cnew %load.1128, 125
	jnz %tmp.1129, @ift.1130, @end.1130
@ift.1130
	%constant.1131 =l call $stderr()
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1133 =l extsw %i.1104
	%tmp.1134 =l mul 1, %conv.1133
	%tmp.1135 =l add %fmt.1084, %tmp.1134
	%load.1136 =w loadsb %tmp.1135
	%tmp.1137 =w call $fprintf(l %constant.1131, l $.1132, ..., w %i.1104, w %load.1136)
	%constant.1138 =l call $stderr()
	%tmp.1139 =w call $fflush(l %constant.1138)
	ret $.1140
@end.1130
	%arg.1091 =w loadw %arg.addr.1092
	%tmp.1141 =w add %arg.1091, 1
	storew %tmp.1141, %arg.addr.1092
	%arg.1142 =w loadw %arg.addr.1092
	%result.1087 =l loadl %result.addr.1090
	%result.1087 =l loadl %result.addr.1090
	%offset.1145 =l add %meta.1085, 8
	%field.1146 =l loadl %offset.1145
	%arg.1142 =w loadw %arg.addr.1092
	%offset.1147 =l add %meta.1085, 8
	%field.1148 =l loadl %offset.1147
	%arg.1142 =w loadw %arg.addr.1092
	%conv.1149 =l extsw %arg.1142
	%tmp.1150 =l mul 8, %conv.1149
	%tmp.1151 =l add %field.1148, %tmp.1150
	%load.1152 =l loadl %tmp.1151
	%wrapped.1095 =w loadsw %wrapped.addr.1096
	%tmp.1153 =l call $__to_string(l %load.1152, l %args.1086, w %wrapped.1095)
	%struct.ElleMeta.1154 =l alloc8 44
	%conv.1157 =l extsw 2
	%tmp.1158 =l mul 8, %conv.1157
	%tmp.1160 =l add %tmp.1158, 4
	%array.full.1159 =l alloc8 %tmp.1160
	storew 2, %array.full.1159
	%array.1161 =l add %array.full.1159, 4
	%array.offset.1162 =l add %array.1161, 0
	storel $.1155, %array.offset.1162
	%array.offset.1163 =l add %array.1161, 8
	storel $.1156, %array.offset.1163
	%offset.1164 =l add %struct.ElleMeta.1154, 0
	storel %array.1161, %offset.1164
	%conv.1167 =l extsw 2
	%tmp.1168 =l mul 8, %conv.1167
	%tmp.1170 =l add %tmp.1168, 4
	%array.full.1169 =l alloc8 %tmp.1170
	storew 2, %array.full.1169
	%array.1171 =l add %array.full.1169, 4
	%array.offset.1172 =l add %array.1171, 0
	storel $.1165, %array.offset.1172
	%array.offset.1173 =l add %array.1171, 8
	storel $.1166, %array.offset.1173
	%offset.1174 =l add %struct.ElleMeta.1154, 8
	storel %array.1171, %offset.1174
	%offset.1175 =l add %struct.ElleMeta.1154, 16
	storew 2, %offset.1175
	%offset.1177 =l add %struct.ElleMeta.1154, 20
	storel $.1176, %offset.1177
	%offset.1179 =l add %struct.ElleMeta.1154, 28
	storel $.1178, %offset.1179
	%offset.1180 =l add %struct.ElleMeta.1154, 36
	storew 531, %offset.1180
	%offset.1181 =l add %struct.ElleMeta.1154, 40
	storew 19, %offset.1181
	%tmp.1182 =w call $string.extend(:ElleMeta %struct.ElleMeta.1154, l %result.addr.1090, ..., l %tmp.1153)
	storew 0, %is_open.addr.1094
	%is_open.1183 =w loadsw %is_open.addr.1094
	storew 0, %wrapped.addr.1096
	%wrapped.1184 =w loadsw %wrapped.addr.1096
	jmp @loop.1099.step
@end.1105
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1185 =l extsw %i.1104
	%tmp.1186 =l mul 1, %conv.1185
	%tmp.1187 =l add %fmt.1084, %tmp.1186
	%load.1188 =w loadsb %tmp.1187
	%tmp.1189 =w ceqw %load.1188, 123
	jnz %tmp.1189, @ift.1190, @end.1190
@ift.1190
	storew 1, %is_open.addr.1094
	%is_open.1191 =w loadsw %is_open.addr.1094
	jmp @loop.1099.step
@end.1190
	%result.1087 =l loadl %result.addr.1090
	%result.1087 =l loadl %result.addr.1090
	%i.1104 =w loadw %i.addr.1098
	%i.1104 =w loadw %i.addr.1098
	%conv.1192 =l extsw %i.1104
	%tmp.1193 =l mul 1, %conv.1192
	%tmp.1194 =l add %fmt.1084, %tmp.1193
	%load.1195 =w loadsb %tmp.1194
	%tmp.1196 =l call $string.push(l %result.addr.1090, w %load.1195)
	jmp @loop.1099.step
@loop.1099.end
	%result.1087 =l loadl %result.addr.1090
	ret %result.1087
}
export function l $string.__internal_formatter_do_not_use_unless_you_know_what_youre_doing__(:ElleMeta %meta.1197, l %fmt.1198, ...) {
@start
	%offset.1199 =l add %meta.1197, 16
	%field.1200 =w loadw %offset.1199
	%tmp.1201 =w sub %field.1200, 1
	%conv.1202 =l extsw %tmp.1201
	%args.1203 =l alloc8 %conv.1202
	vastart %args.1203
	%tmp.1204 =l call $__internal_fmt(l %fmt.1198, :ElleMeta %meta.1197, l %args.1203)
	ret %tmp.1204
}
export function l $string.__fmt__(l %self.1237, w %nesting.1238) {
@start
	%struct.ElleMeta.1240 =l alloc8 44
	%conv.1243 =l extsw 2
	%tmp.1244 =l mul 8, %conv.1243
	%tmp.1246 =l add %tmp.1244, 4
	%array.full.1245 =l alloc8 %tmp.1246
	storew 2, %array.full.1245
	%array.1247 =l add %array.full.1245, 4
	%array.offset.1248 =l add %array.1247, 0
	storel $.1241, %array.offset.1248
	%array.offset.1249 =l add %array.1247, 8
	storel $.1242, %array.offset.1249
	%offset.1250 =l add %struct.ElleMeta.1240, 0
	storel %array.1247, %offset.1250
	%conv.1253 =l extsw 2
	%tmp.1254 =l mul 8, %conv.1253
	%tmp.1256 =l add %tmp.1254, 4
	%array.full.1255 =l alloc8 %tmp.1256
	storew 2, %array.full.1255
	%array.1257 =l add %array.full.1255, 4
	%array.offset.1258 =l add %array.1257, 0
	storel $.1251, %array.offset.1258
	%array.offset.1259 =l add %array.1257, 8
	storel $.1252, %array.offset.1259
	%offset.1260 =l add %struct.ElleMeta.1240, 8
	storel %array.1257, %offset.1260
	%offset.1261 =l add %struct.ElleMeta.1240, 16
	storew 2, %offset.1261
	%offset.1263 =l add %struct.ElleMeta.1240, 20
	storel $.1262, %offset.1263
	%offset.1265 =l add %struct.ElleMeta.1240, 28
	storel $.1264, %offset.1265
	%offset.1266 =l add %struct.ElleMeta.1240, 36
	storew 1, %offset.1266
	%offset.1267 =l add %struct.ElleMeta.1240, 40
	storew 1, %offset.1267
	%tmp.1268 =l call $string.__internal_formatter_do_not_use_unless_you_know_what_youre_doing__(:ElleMeta %struct.ElleMeta.1240, l $.1239, ..., l %self.1237)
	ret %tmp.1268
}
export function l $i32.__fmt__(w %self.1621, w %nesting.1622) {
@start
	%struct.ElleMeta.1624 =l alloc8 44
	%conv.1627 =l extsw 2
	%tmp.1628 =l mul 8, %conv.1627
	%tmp.1630 =l add %tmp.1628, 4
	%array.full.1629 =l alloc8 %tmp.1630
	storew 2, %array.full.1629
	%array.1631 =l add %array.full.1629, 4
	%array.offset.1632 =l add %array.1631, 0
	storel $.1625, %array.offset.1632
	%array.offset.1633 =l add %array.1631, 8
	storel $.1626, %array.offset.1633
	%offset.1634 =l add %struct.ElleMeta.1624, 0
	storel %array.1631, %offset.1634
	%conv.1637 =l extsw 2
	%tmp.1638 =l mul 8, %conv.1637
	%tmp.1640 =l add %tmp.1638, 4
	%array.full.1639 =l alloc8 %tmp.1640
	storew 2, %array.full.1639
	%array.1641 =l add %array.full.1639, 4
	%array.offset.1642 =l add %array.1641, 0
	storel $.1635, %array.offset.1642
	%array.offset.1643 =l add %array.1641, 8
	storel $.1636, %array.offset.1643
	%offset.1644 =l add %struct.ElleMeta.1624, 8
	storel %array.1641, %offset.1644
	%offset.1645 =l add %struct.ElleMeta.1624, 16
	storew 2, %offset.1645
	%offset.1647 =l add %struct.ElleMeta.1624, 20
	storel $.1646, %offset.1647
	%offset.1649 =l add %struct.ElleMeta.1624, 28
	storel $.1648, %offset.1649
	%offset.1650 =l add %struct.ElleMeta.1624, 36
	storew 1, %offset.1650
	%offset.1651 =l add %struct.ElleMeta.1624, 40
	storew 1, %offset.1651
	%tmp.1652 =l call $string.__internal_formatter_do_not_use_unless_you_know_what_youre_doing__(:ElleMeta %struct.ElleMeta.1624, l $.1623, ..., w %self.1621)
	ret %tmp.1652
}
export function l $Array.with_capacity.0.2.15.1(w %initialCapacity.1975) {
@start
	%size.1977 =l copy 16
	%tmp.1978 =l call $malloc(l %size.1977)
	%array.addr.1979 =l alloc8 8
	storel %tmp.1978, %array.addr.1979
	%array.1976 =l loadl %array.addr.1979
	%array.1976 =l loadl %array.addr.1979
	%tmp.1980 =l mul 16, 0
	%tmp.1981 =l add %array.1976, %tmp.1980
	%size.1982 =l copy 16
	%tmp.1983 =l call $malloc(l %size.1982)
	storel %tmp.1983, %tmp.1981
	%array.1976 =l loadl %array.addr.1979
	%load.1984 =l loadl %array.1976
	%offset.1985 =l add %load.1984, 8
	%size.1986 =l copy 8
	%conv.1987 =l extsw %initialCapacity.1975
	%tmp.1988 =l mul %conv.1987, %size.1986
	%tmp.1989 =l call $malloc(l %tmp.1988)
	storel %tmp.1989, %offset.1985
	%array.1976 =l loadl %array.addr.1979
	%load.1990 =l loadl %array.1976
	%offset.1991 =l add %load.1990, 0
	storew 0, %offset.1991
	%array.1976 =l loadl %array.addr.1979
	%load.1992 =l loadl %array.1976
	%offset.1993 =l add %load.1992, 4
	storew %initialCapacity.1975, %offset.1993
	%array.1976 =l loadl %array.addr.1979
	ret %array.1976
}
export function w $Array.resize.0.2.15.1(l %self.2066, w %newCapacity.2067) {
@start
	%load.2068 =l loadl %self.2066
	%offset.2069 =l add %load.2068, 8
	%load.2070 =l loadl %self.2066
	%offset.2071 =l add %load.2070, 8
	%field.2072 =l loadl %offset.2071
	%size.2073 =l copy 8
	%conv.2074 =l extsw %newCapacity.2067
	%tmp.2075 =l mul %conv.2074, %size.2073
	%tmp.2076 =l call $realloc(l %field.2072, l %tmp.2075)
	storel %tmp.2076, %offset.2069
	%load.2077 =l loadl %self.2066
	%offset.2078 =l add %load.2077, 4
	storew %newCapacity.2067, %offset.2078
	ret 0
}
export function w $Array.__store__.0.2.15.1(l %self.2095, l %i.2096, l %value.2097) {
@start
	%load.2101 =l loadl %self.2095
	%offset.2102 =l add %load.2101, 8
	%field.2103 =l loadl %offset.2102
	%load.2104 =l loadl %self.2095
	%offset.2105 =l add %load.2104, 8
	%field.2106 =l loadl %offset.2105
	%tmp.2107 =l mul 8, %i.2096
	%tmp.2108 =l add %field.2106, %tmp.2107
	storel %value.2097, %tmp.2108
	ret 0
}
export function w $Array.push.0.2.15.1(l %self.2040, l %element.2041) {
@start

@loop.2042.cond
	%load.2043 =l loadl %self.2040
	%offset.2044 =l add %load.2043, 0
	%field.2045 =w loadw %offset.2044
	%load.2046 =l loadl %self.2040
	%offset.2047 =l add %load.2046, 4
	%field.2048 =w loadw %offset.2047
	%tmp.2049 =w csgew %field.2045, %field.2048
	jnz %tmp.2049, @loop.2042.body, @loop.2042.end
@loop.2042.step
	jmp @loop.2042.cond
@loop.2042.body
	%load.2081 =l loadl %self.2040
	%offset.2082 =l add %load.2081, 4
	%field.2083 =w loadw %offset.2082
	%or.2080 =w copy 0
@or.left.2079
	%or.left.2084 =w ceqw %field.2083, 0
	jnz %or.left.2084, @or.right.2079, @or.left.match.2079
@or.right.2079
	%or.right.2085 =w ceqw 1, 0
	jnz %or.right.2085, @or.end.2079, @or.right.match.2079
@or.left.match.2079
	%or.2080 =w copy %field.2083
	jmp @or.end.2079
@or.right.match.2079
	%or.2080 =w copy 1
	jmp @or.end.2079
@or.end.2079
	%tmp.2086 =w mul %or.2080, 2
	%tmp.2087 =w call $Array.resize.0.2.15.1(l %self.2040, w %tmp.2086)
	jmp @loop.2042.step
@loop.2042.end
	%load.2109 =l loadl %self.2040
	%offset.2110 =l add %load.2109, 0
	%field.2111 =w loadw %offset.2110
	%conv.2112 =l extsw %field.2111
	%tmp.2113 =w call $Array.__store__.0.2.15.1(l %self.2040, l %conv.2112, l %element.2041)
	%load.2115 =l loadl %self.2040
	%offset.2116 =l add %load.2115, 0
	%load.2117 =l loadl %self.2040
	%offset.2118 =l add %load.2117, 0
	%field.2119 =w loadw %offset.2118
	%tmp.2120 =w add %field.2119, 1
	storew %tmp.2120, %offset.2116
	ret 0
}
export function l $string.split(l %self.1972, l %delimiter.1973) {
@start
	%tmp.1994 =l call $Array.with_capacity.0.2.15.1(w 10)
	%parts.addr.1996 =l alloc8 8
	storel %tmp.1994, %parts.addr.1996
	%tmp.1998 =l call $string.len(l %delimiter.1973)
	%conv.1999 =w copy %tmp.1998
	%delimiter_length.addr.2000 =l alloc8 4
	storew %conv.1999, %delimiter_length.addr.2000
	%delimiter_length.1997 =w loadw %delimiter_length.addr.2000
	%tmp.2001 =w ceqw %delimiter_length.1997, 0
	jnz %tmp.2001, @ift.2002, @end.2002
@ift.2002
	%parts.1974 =l loadl %parts.addr.1996
	ret %parts.1974
@end.2002
	%start.addr.2004 =l alloc8 4
	storew 0, %start.addr.2004
	%i.addr.2006 =l alloc8 4
	storew 0, %i.addr.2006
@loop.2007.cond
	%i.2005 =w loadw %i.addr.2006
	%tmp.2008 =l call $string.len(l %self.1972)
	%delimiter_length.1997 =w loadw %delimiter_length.addr.2000
	%conv.2009 =l extsw %delimiter_length.1997
	%tmp.2010 =l sub %tmp.2008, %conv.2009
	%conv.2011 =l extsw %i.2005
	%tmp.2012 =w cslel %conv.2011, %tmp.2010
	jnz %tmp.2012, @loop.2007.body, @loop.2007.end
@loop.2007.step
	%i.2005 =w loadw %i.addr.2006
	%tmp.2013 =w add %i.2005, 1
	storew %tmp.2013, %i.addr.2006
	%i.2014 =w loadw %i.addr.2006
	jmp @loop.2007.cond
@loop.2007.body
	%is_match.addr.2016 =l alloc8 4
	storew 1, %is_match.addr.2016
	%j.addr.2018 =l alloc8 4
	storew 0, %j.addr.2018
@loop.2019.cond
	%j.2017 =w loadw %j.addr.2018
	%delimiter_length.1997 =w loadw %delimiter_length.addr.2000
	%tmp.2020 =w csltw %j.2017, %delimiter_length.1997
	jnz %tmp.2020, @loop.2019.body, @loop.2019.end
@loop.2019.step
	%j.2017 =w loadw %j.addr.2018
	%tmp.2021 =w add %j.2017, 1
	storew %tmp.2021, %j.addr.2018
	%j.2022 =w loadw %j.addr.2018
	jmp @loop.2019.cond
@loop.2019.body
	%i.2014 =w loadw %i.addr.2006
	%j.2022 =w loadw %j.addr.2018
	%tmp.2023 =w add %i.2014, %j.2022
	%i.2014 =w loadw %i.addr.2006
	%j.2022 =w loadw %j.addr.2018
	%tmp.2024 =w add %i.2014, %j.2022
	%conv.2025 =l extsw %tmp.2024
	%tmp.2026 =l mul 1, %conv.2025
	%tmp.2027 =l add %self.1972, %tmp.2026
	%load.2028 =w loadsb %tmp.2027
	%j.2022 =w loadw %j.addr.2018
	%j.2022 =w loadw %j.addr.2018
	%conv.2029 =l extsw %j.2022
	%tmp.2030 =l mul 1, %conv.2029
	%tmp.2031 =l add %delimiter.1973, %tmp.2030
	%load.2032 =w loadsb %tmp.2031
	%tmp.2033 =w cnew %load.2028, %load.2032
	jnz %tmp.2033, @ift.2034, @end.2034
@ift.2034
	storew 0, %is_match.addr.2016
	%is_match.2035 =w loadsw %is_match.addr.2016
	jmp @loop.2019.end
@end.2034
	jmp @loop.2019.step
@loop.2019.end
	%is_match.2015 =w loadsw %is_match.addr.2016
	jnz %is_match.2015, @ift.2036, @end.2036
@ift.2036
	%start.2003 =w loadw %start.addr.2004
	%i.2014 =w loadw %i.addr.2006
	%tmp.2038 =l call $string.slice(l %self.1972, w %start.2003, w %i.2014)
	%part.addr.2039 =l alloc8 8
	storel %tmp.2038, %part.addr.2039
	%parts.1974 =l loadl %parts.addr.1996
	%part.2037 =l loadl %part.addr.2039
	%tmp.2121 =w call $Array.push.0.2.15.1(l %parts.1974, l %part.2037)
	%i.2014 =w loadw %i.addr.2006
	%delimiter_length.1997 =w loadw %delimiter_length.addr.2000
	%tmp.2123 =w add %i.2014, %delimiter_length.1997
	storew %tmp.2123, %start.addr.2004
	%start.2124 =w loadw %start.addr.2004
	%start.2124 =w loadw %start.addr.2004
	%tmp.2125 =w sub %start.2124, 1
	storew %tmp.2125, %i.addr.2006
	%i.2126 =w loadw %i.addr.2006
@end.2036
	jmp @loop.2007.step
@loop.2007.end
	%start.2003 =w loadw %start.addr.2004
	%tmp.2127 =l call $string.len(l %self.1972)
	%conv.2128 =l extsw %start.2003
	%tmp.2129 =w csltl %conv.2128, %tmp.2127
	jnz %tmp.2129, @ift.2130, @end.2130
@ift.2130
	%start.2003 =w loadw %start.addr.2004
	%tmp.2132 =l call $string.len(l %self.1972)
	%conv.2133 =w copy %tmp.2132
	%tmp.2134 =l call $string.slice(l %self.1972, w %start.2003, w %conv.2133)
	%part.addr.2135 =l alloc8 8
	storel %tmp.2134, %part.addr.2135
	%parts.1974 =l loadl %parts.addr.1996
	%part.2131 =l loadl %part.addr.2135
	%tmp.2136 =w call $Array.push.0.2.15.1(l %parts.1974, l %part.2131)
@end.2130
	%parts.1974 =l loadl %parts.addr.1996
	ret %parts.1974
}
function w $__print(l %args.2145, :ElleMeta %meta.2146, w %wrap.2147, w %full.2148, w %newline.2149) {
@start
	%i.addr.2151 =l alloc8 4
	storew 0, %i.addr.2151
@loop.2152.cond
	%i.2150 =w loadw %i.addr.2151
	%offset.2153 =l add %meta.2146, 16
	%field.2154 =w loadw %offset.2153
	%tmp.2155 =w csltw %i.2150, %field.2154
	jnz %tmp.2155, @loop.2152.body, @loop.2152.end
@loop.2152.step
	%i.2150 =w loadw %i.addr.2151
	%tmp.2156 =w add %i.2150, 1
	storew %tmp.2156, %i.addr.2151
	%i.2157 =w loadw %i.addr.2151
	jmp @loop.2152.cond
@loop.2152.body
	%offset.2161 =l add %meta.2146, 8
	%field.2162 =l loadl %offset.2161
	%i.2157 =w loadw %i.addr.2151
	%offset.2163 =l add %meta.2146, 8
	%field.2164 =l loadl %offset.2163
	%i.2157 =w loadw %i.addr.2151
	%conv.2165 =l extsw %i.2157
	%tmp.2166 =l mul 8, %conv.2165
	%tmp.2167 =l add %field.2164, %tmp.2166
	%load.2168 =l loadl %tmp.2167
	%ty.addr.2169 =l alloc8 8
	storel %load.2168, %ty.addr.2169
	%offset.2173 =l add %meta.2146, 0
	%field.2174 =l loadl %offset.2173
	%i.2157 =w loadw %i.addr.2151
	%offset.2175 =l add %meta.2146, 0
	%field.2176 =l loadl %offset.2175
	%i.2157 =w loadw %i.addr.2151
	%conv.2177 =l extsw %i.2157
	%tmp.2178 =l mul 8, %conv.2177
	%tmp.2179 =l add %field.2176, %tmp.2178
	%load.2180 =l loadl %tmp.2179
	%expr.addr.2181 =l alloc8 8
	storel %load.2180, %expr.addr.2181
	%and.2185 =w copy 0
@and.left.2184
	%and.left.2186 =w ceqw %wrap.2147, 0
	jnz %and.left.2186, @and.end.2184, @and.right.2184
@and.right.2184
	%ty.2158 =l loadl %ty.addr.2169
	%tmp.2188 =w call $string.equals(l %ty.2158, l $.2187)
	%and.right.2189 =w ceqw %tmp.2188, 0
	jnz %and.right.2189, @and.end.2184, @and.right.match.2184
@and.left.match.2184
	%and.2185 =w copy %wrap.2147
	jmp @and.end.2184
@and.right.match.2184
	%and.2185 =w copy %tmp.2188
	jmp @and.end.2184
@and.end.2184
	%tmp.2190 =l call $__to_string(l $.2183, l %args.2145, w %and.2185)
	%res.addr.2191 =l alloc8 8
	storel %tmp.2190, %res.addr.2191
	jnz %full.2148, @ift.2192, @iff.2192
@ift.2192
	%offset.2194 =l add %meta.2146, 28
	%field.2195 =l loadl %offset.2194
	%offset.2196 =l add %meta.2146, 36
	%field.2197 =w loadw %offset.2196
	%offset.2198 =l add %meta.2146, 40
	%field.2199 =w loadw %offset.2198
	%ty.2158 =l loadl %ty.addr.2169
	%expr.2170 =l loadl %expr.addr.2181
	%res.2182 =l loadl %res.addr.2191
	%tmp.2200 =w call $printf(l $.2193, ..., l %field.2195, w %field.2197, w %field.2199, l %ty.2158, l %expr.2170, l %res.2182)
	jmp @end.2192
@iff.2192
	%res.2182 =l loadl %res.addr.2191
	%tmp.2202 =w call $printf(l $.2201, ..., l %res.2182)
@end.2192
	%res.2182 =l loadl %res.addr.2191
	%tmp.2203 =w call $free(l %res.2182)
	jmp @loop.2152.step
@loop.2152.end
	jnz %newline.2149, @ift.2204, @end.2204
@ift.2204
	%tmp.2205 =w call $putchar(w 10)
@end.2204
	ret 0
}
function w $__err(l %args.2206, :ElleMeta %meta.2207, w %newline.2208) {
@start
	%constant.2209 =l call $stderr()
	%constant.2210 =l call $stderr()
	%tmp.2212 =l call $fdopen(l 2, l $.2211)
	%stderr.addr.2213 =l alloc8 8
	storel %tmp.2212, %stderr.addr.2213
	%fmt.addr.2216 =l alloc8 8
	storel $.2215, %fmt.addr.2216
	%error.addr.2219 =l alloc8 8
	storel $.2218, %error.addr.2219
	%i.addr.2221 =l alloc8 4
	storew 0, %i.addr.2221
@loop.2222.cond
	%i.2220 =w loadw %i.addr.2221
	%offset.2223 =l add %meta.2207, 16
	%field.2224 =w loadw %offset.2223
	%tmp.2225 =w csltw %i.2220, %field.2224
	jnz %tmp.2225, @loop.2222.body, @loop.2222.end
@loop.2222.step
	%i.2220 =w loadw %i.addr.2221
	%tmp.2226 =w add %i.2220, 1
	storew %tmp.2226, %i.addr.2221
	%i.2227 =w loadw %i.addr.2221
	jmp @loop.2222.cond
@loop.2222.body
	%offset.2231 =l add %meta.2207, 8
	%field.2232 =l loadl %offset.2231
	%i.2227 =w loadw %i.addr.2221
	%offset.2233 =l add %meta.2207, 8
	%field.2234 =l loadl %offset.2233
	%i.2227 =w loadw %i.addr.2221
	%conv.2235 =l extsw %i.2227
	%tmp.2236 =l mul 8, %conv.2235
	%tmp.2237 =l add %field.2234, %tmp.2236
	%load.2238 =l loadl %tmp.2237
	%ty.addr.2239 =l alloc8 8
	storel %load.2238, %ty.addr.2239
	%offset.2243 =l add %meta.2207, 0
	%field.2244 =l loadl %offset.2243
	%i.2227 =w loadw %i.addr.2221
	%offset.2245 =l add %meta.2207, 0
	%field.2246 =l loadl %offset.2245
	%i.2227 =w loadw %i.addr.2221
	%conv.2247 =l extsw %i.2227
	%tmp.2248 =l mul 8, %conv.2247
	%tmp.2249 =l add %field.2246, %tmp.2248
	%load.2250 =l loadl %tmp.2249
	%expr.addr.2251 =l alloc8 8
	storel %load.2250, %expr.addr.2251
	%tmp.2254 =l call $__to_string(l $.2253, l %args.2206, w 0)
	%res.addr.2255 =l alloc8 8
	storel %tmp.2254, %res.addr.2255
	%error.2217 =l loadl %error.addr.2219
	%res.2252 =l loadl %res.addr.2255
	%struct.ElleMeta.2256 =l alloc8 44
	%conv.2259 =l extsw 2
	%tmp.2260 =l mul 8, %conv.2259
	%tmp.2262 =l add %tmp.2260, 4
	%array.full.2261 =l alloc8 %tmp.2262
	storew 2, %array.full.2261
	%array.2263 =l add %array.full.2261, 4
	%array.offset.2264 =l add %array.2263, 0
	storel $.2257, %array.offset.2264
	%array.offset.2265 =l add %array.2263, 8
	storel $.2258, %array.offset.2265
	%offset.2266 =l add %struct.ElleMeta.2256, 0
	storel %array.2263, %offset.2266
	%conv.2269 =l extsw 2
	%tmp.2270 =l mul 8, %conv.2269
	%tmp.2272 =l add %tmp.2270, 4
	%array.full.2271 =l alloc8 %tmp.2272
	storew 2, %array.full.2271
	%array.2273 =l add %array.full.2271, 4
	%array.offset.2274 =l add %array.2273, 0
	storel $.2267, %array.offset.2274
	%array.offset.2275 =l add %array.2273, 8
	storel $.2268, %array.offset.2275
	%offset.2276 =l add %struct.ElleMeta.2256, 8
	storel %array.2273, %offset.2276
	%offset.2277 =l add %struct.ElleMeta.2256, 16
	storew 2, %offset.2277
	%offset.2279 =l add %struct.ElleMeta.2256, 20
	storel $.2278, %offset.2279
	%offset.2281 =l add %struct.ElleMeta.2256, 28
	storel $.2280, %offset.2281
	%offset.2282 =l add %struct.ElleMeta.2256, 36
	storew 40, %offset.2282
	%offset.2283 =l add %struct.ElleMeta.2256, 40
	storew 14, %offset.2283
	%tmp.2284 =l call $string.concat(:ElleMeta %struct.ElleMeta.2256, ..., l %error.2217, l %res.2252)
	storel %tmp.2284, %error.addr.2219
	%error.2285 =l loadl %error.addr.2219
	%res.2252 =l loadl %res.addr.2255
	%tmp.2286 =w call $free(l %res.2252)
	jmp @loop.2222.step
@loop.2222.end
	%constant.2210 =l loadl %stderr.addr.2213
	%fmt.2214 =l loadl %fmt.addr.2216
	%error.2217 =l loadl %error.addr.2219
	%tmp.2287 =w call $fprintf(l %constant.2210, l %fmt.2214, ..., l %error.2217)
	%constant.2210 =l loadl %stderr.addr.2213
	%tmp.2288 =w call $fflush(l %constant.2210)
	%offset.2289 =l add %meta.2207, 16
	%field.2290 =w loadw %offset.2289
	%tmp.2291 =w csgtw %field.2290, 0
	jnz %tmp.2291, @ift.2292, @end.2292
@ift.2292
	%error.2217 =l loadl %error.addr.2219
	%tmp.2293 =w call $free(l %error.2217)
@end.2292
	jnz %newline.2208, @ift.2294, @end.2294
@ift.2294
	%tmp.2295 =w call $putchar(w 10)
@end.2294
	ret 0
}
export function w $io.dbg(:ElleMeta %meta.2296, ...) {
@start
	%offset.2297 =l add %meta.2296, 16
	%field.2298 =w loadw %offset.2297
	%conv.2299 =l extsw %field.2298
	%args.2300 =l alloc8 %conv.2299
	vastart %args.2300
	%tmp.2301 =w call $__print(l %args.2300, :ElleMeta %meta.2296, w 1, w 1, w 0)
	ret 0
}
export function w $io.eprintln(:ElleMeta %meta.2320, ...) {
@start
	%offset.2321 =l add %meta.2320, 16
	%field.2322 =w loadw %offset.2321
	%conv.2323 =l extsw %field.2322
	%args.2324 =l alloc8 %conv.2323
	vastart %args.2324
	%tmp.2325 =w call $__err(l %args.2324, :ElleMeta %meta.2320, w 1)
	ret 0
}
export function l $BUF_SIZE() {
@start
	%conv.2456 =l extsw 1024
	ret %conv.2456
}
export function l $EOF() {
@start
	%tmp.2457 =w mul 1, -1
	%conv.2458 =l extsw %tmp.2457
	ret %conv.2458
}
export function l $io.read_to_string(l %path.2521) {
@start
	%constant.2523 =l call $BUF_SIZE()
	%constant.2.addr.2524 =l alloc8 8
	storel %constant.2523, %constant.2.addr.2524
	%constant.2526 =l call $EOF()
	%constant.1.addr.2527 =l alloc8 8
	storel %constant.2526, %constant.1.addr.2527
	%tmp.2530 =l call $fopen(l %path.2521, l $.2529)
	%file.addr.2531 =l alloc8 8
	storel %tmp.2530, %file.addr.2531
	%file.2528 =l loadl %file.addr.2531
	%not.2532 =w ceqw %file.2528, 0
	jnz %not.2532, @ift.2533, @end.2533
@ift.2533
	%file.2528 =l loadl %file.addr.2531
	%tmp.2534 =w call $fclose(l %file.2528)
	%constant.2535 =l call $nil()
	ret %constant.2535
@end.2533
	%file.2528 =l loadl %file.addr.2531
	%constant.2536 =w call $SEEK_END()
	%tmp.2537 =w call $fseek(l %file.2528, l 0, w %constant.2536)
	%file.2528 =l loadl %file.addr.2531
	%tmp.2539 =l call $ftell(l %file.2528)
	%file_size.addr.2540 =l alloc8 8
	storel %tmp.2539, %file_size.addr.2540
	%file.2528 =l loadl %file.addr.2531
	%constant.2541 =w call $SEEK_SET()
	%tmp.2542 =w call $fseek(l %file.2528, l 0, w %constant.2541)
	%buf_size.addr.2544 =l alloc8 8
	storel 0, %buf_size.addr.2544
	%file_size.2538 =l loadl %file_size.addr.2540
	%conv.2545 =l extsw 0
	%tmp.2546 =w csgtl %file_size.2538, %conv.2545
	jnz %tmp.2546, @ift.2547, @iff.2547
@ift.2547
	%file_size.2538 =l loadl %file_size.addr.2540
	%tmp.2548 =l add %file_size.2538, 1
	storel %tmp.2548, %buf_size.addr.2544
	%buf_size.2549 =l loadl %buf_size.addr.2544
	jmp @end.2547
@iff.2547
	storel 4096, %buf_size.addr.2544
	%buf_size.2550 =l loadl %buf_size.addr.2544
@end.2547
	%buf_size.2543 =l loadl %buf_size.addr.2544
	%size.2552 =l copy 1
	%tmp.2553 =l mul %buf_size.2543, %size.2552
	%tmp.2554 =l call $malloc(l %tmp.2553)
	%buf.addr.2555 =l alloc8 8
	storel %tmp.2554, %buf.addr.2555
	%buf.2551 =l loadl %buf.addr.2555
	%not.2556 =w ceqw %buf.2551, 0
	jnz %not.2556, @ift.2557, @end.2557
@ift.2557
	%file.2528 =l loadl %file.addr.2531
	%tmp.2558 =w call $fclose(l %file.2528)
	%constant.2559 =l call $nil()
	ret %constant.2559
@end.2557
	%pos.addr.2561 =l alloc8 8
	storel 0, %pos.addr.2561
	%read_size.addr.2563 =l alloc8 8
	storel 0, %read_size.addr.2563
@loop.2564.cond
	%buf.2551 =l loadl %buf.addr.2555
	%pos.2560 =l loadl %pos.addr.2561
	%tmp.2565 =l add %buf.2551, %pos.2560
	%size.2566 =l copy 1
	%buf_size.2543 =l loadl %buf_size.addr.2544
	%pos.2560 =l loadl %pos.addr.2561
	%tmp.2567 =l sub %buf_size.2543, %pos.2560
	%tmp.2568 =l sub %tmp.2567, 1
	%file.2528 =l loadl %file.addr.2531
	%tmp.2569 =l call $fread(l %tmp.2565, l %size.2566, l %tmp.2568, l %file.2528)
	storel %tmp.2569, %read_size.addr.2563
	%read_size.2570 =l loadl %read_size.addr.2563
	%conv.2571 =l extsw 0
	%tmp.2572 =w csgtl %read_size.2570, %conv.2571
	jnz %tmp.2572, @loop.2564.body, @loop.2564.end
@loop.2564.step
	jmp @loop.2564.cond
@loop.2564.body
	%pos.2560 =l loadl %pos.addr.2561
	%read_size.2570 =l loadl %read_size.addr.2563
	%tmp.2573 =l add %pos.2560, %read_size.2570
	storel %tmp.2573, %pos.addr.2561
	%pos.2574 =l loadl %pos.addr.2561
	%pos.2574 =l loadl %pos.addr.2561
	%buf_size.2543 =l loadl %buf_size.addr.2544
	%conv.2575 =l extsw 1
	%tmp.2576 =l sub %buf_size.2543, %conv.2575
	%tmp.2577 =w csgel %pos.2574, %tmp.2576
	jnz %tmp.2577, @ift.2578, @end.2578
@ift.2578
	%buf_size.2543 =l loadl %buf_size.addr.2544
	%tmp.2579 =l mul %buf_size.2543, 2
	storel %tmp.2579, %buf_size.addr.2544
	%buf_size.2580 =l loadl %buf_size.addr.2544
	%buf.2551 =l loadl %buf.addr.2555
	%buf_size.2580 =l loadl %buf_size.addr.2544
	%size.2581 =l copy 1
	%tmp.2582 =l mul %buf_size.2580, %size.2581
	%tmp.2583 =l call $realloc(l %buf.2551, l %tmp.2582)
	storel %tmp.2583, %buf.addr.2555
	%buf.2584 =l loadl %buf.addr.2555
	%buf.2584 =l loadl %buf.addr.2555
	%not.2585 =w ceqw %buf.2584, 0
	jnz %not.2585, @ift.2586, @end.2586
@ift.2586
	%file.2528 =l loadl %file.addr.2531
	%tmp.2587 =w call $fclose(l %file.2528)
	%constant.2588 =l call $nil()
	ret %constant.2588
@end.2586

@end.2578
	jmp @loop.2564.step
@loop.2564.end
	%buf.2551 =l loadl %buf.addr.2555
	%pos.2560 =l loadl %pos.addr.2561
	%buf.2551 =l loadl %buf.addr.2555
	%pos.2560 =l loadl %pos.addr.2561
	%tmp.2589 =l mul 1, %pos.2560
	%tmp.2590 =l add %buf.2551, %tmp.2589
	storeb 0, %tmp.2590
	%file.2528 =l loadl %file.addr.2531
	%tmp.2591 =w call $fclose(l %file.2528)
	%buf.2551 =l loadl %buf.addr.2555
	ret %buf.2551
}
function w $is_valid(l %str.2612, l %type.2613) {
@start
	%tmp.2618 =l mul 8, 3
	%tmp.2620 =l add %tmp.2618, 4
	%array.full.2619 =l alloc8 %tmp.2620
	storew 3, %array.full.2619
	%array.2621 =l add %array.full.2619, 4
	%array.offset.2622 =l add %array.2621, 0
	storel $.2615, %array.offset.2622
	%array.offset.2623 =l add %array.2621, 8
	storel $.2616, %array.offset.2623
	%array.offset.2624 =l add %array.2621, 16
	storel $.2617, %array.offset.2624
	%valid_strspn.addr.2625 =l alloc8 8
	storel %array.2621, %valid_strspn.addr.2625
	%tmp.2630 =l mul 8, 3
	%tmp.2632 =l add %tmp.2630, 4
	%array.full.2631 =l alloc8 %tmp.2632
	storew 3, %array.full.2631
	%array.2633 =l add %array.full.2631, 4
	%array.offset.2634 =l add %array.2633, 0
	storel $.2627, %array.offset.2634
	%array.offset.2635 =l add %array.2633, 8
	storel $.2628, %array.offset.2635
	%array.offset.2636 =l add %array.2633, 16
	storel $.2629, %array.offset.2636
	%valid_types.addr.2637 =l alloc8 8
	storel %array.2633, %valid_types.addr.2637
	%tmp.2639 =w mul 1, -1
	%type_index.addr.2640 =l alloc8 4
	storew %tmp.2639, %type_index.addr.2640
	%i.addr.2642 =l alloc8 4
	storew 0, %i.addr.2642
@loop.2643.cond
	%i.2641 =w loadw %i.addr.2642
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%conv.2644 =l extsw 4
	%tmp.2645 =l sub %valid_types.2626, %conv.2644
	%array.length.2646 =w loadw %tmp.2645
	%tmp.2647 =w csltw %i.2641, %array.length.2646
	jnz %tmp.2647, @loop.2643.body, @loop.2643.end
@loop.2643.step
	%i.2641 =w loadw %i.addr.2642
	%tmp.2648 =w add %i.2641, 1
	storew %tmp.2648, %i.addr.2642
	%i.2649 =w loadw %i.addr.2642
	jmp @loop.2643.cond
@loop.2643.body
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%i.2649 =w loadw %i.addr.2642
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%i.2649 =w loadw %i.addr.2642
	%conv.2650 =l extsw %i.2649
	%tmp.2651 =l mul 8, %conv.2650
	%tmp.2652 =l add %valid_types.2626, %tmp.2651
	%load.2653 =l loadl %tmp.2652
	%tmp.2654 =w call $string.equals(l %load.2653, l %type.2613)
	jnz %tmp.2654, @ift.2655, @end.2655
@ift.2655
	%i.2649 =w loadw %i.addr.2642
	storew %i.2649, %type_index.addr.2640
	%type_index.2656 =w loadw %type_index.addr.2640
@end.2655
	jmp @loop.2643.step
@loop.2643.end
	%type_index.2638 =w loadw %type_index.addr.2640
	%tmp.2657 =w mul 1, -1
	%tmp.2658 =w ceqw %type_index.2638, %tmp.2657
	jnz %tmp.2658, @ift.2659, @end.2659
@ift.2659
	%string.fmt.2661 =l call $string.__fmt__(l %type.2613, w 0)
	%string.fmt.2662 =l call $string.__fmt__(l $.2660, w 0)
	%string.fmt.2663 =l call $string.__fmt__(l %type.2613, w 0)
	%struct.ElleMeta.2664 =l alloc8 44
	%conv.2668 =l extsw 3
	%tmp.2669 =l mul 8, %conv.2668
	%tmp.2671 =l add %tmp.2669, 4
	%array.full.2670 =l alloc8 %tmp.2671
	storew 3, %array.full.2670
	%array.2672 =l add %array.full.2670, 4
	%array.offset.2673 =l add %array.2672, 0
	storel $.2665, %array.offset.2673
	%array.offset.2674 =l add %array.2672, 8
	storel $.2666, %array.offset.2674
	%array.offset.2675 =l add %array.2672, 16
	storel $.2667, %array.offset.2675
	%offset.2676 =l add %struct.ElleMeta.2664, 0
	storel %array.2672, %offset.2676
	%conv.2680 =l extsw 3
	%tmp.2681 =l mul 8, %conv.2680
	%tmp.2683 =l add %tmp.2681, 4
	%array.full.2682 =l alloc8 %tmp.2683
	storew 3, %array.full.2682
	%array.2684 =l add %array.full.2682, 4
	%array.offset.2685 =l add %array.2684, 0
	storel $.2677, %array.offset.2685
	%array.offset.2686 =l add %array.2684, 8
	storel $.2678, %array.offset.2686
	%array.offset.2687 =l add %array.2684, 16
	storel $.2679, %array.offset.2687
	%offset.2688 =l add %struct.ElleMeta.2664, 8
	storel %array.2684, %offset.2688
	%offset.2689 =l add %struct.ElleMeta.2664, 16
	storew 3, %offset.2689
	%offset.2691 =l add %struct.ElleMeta.2664, 20
	storel $.2690, %offset.2691
	%offset.2693 =l add %struct.ElleMeta.2664, 28
	storel $.2692, %offset.2693
	%offset.2694 =l add %struct.ElleMeta.2664, 36
	storew 36, %offset.2694
	%offset.2695 =l add %struct.ElleMeta.2664, 40
	storew 22, %offset.2695
	%tmp.2696 =w call $io.eprintln(:ElleMeta %struct.ElleMeta.2664, ..., l %string.fmt.2661, l %string.fmt.2662, l %string.fmt.2663)
	%string.fmt.2698 =l call $string.__fmt__(l $.2697, w 0)
	%struct.ElleMeta.2699 =l alloc8 44
	%conv.2701 =l extsw 1
	%tmp.2702 =l mul 8, %conv.2701
	%tmp.2704 =l add %tmp.2702, 4
	%array.full.2703 =l alloc8 %tmp.2704
	storew 1, %array.full.2703
	%array.2705 =l add %array.full.2703, 4
	%array.offset.2706 =l add %array.2705, 0
	storel $.2700, %array.offset.2706
	%offset.2707 =l add %struct.ElleMeta.2699, 0
	storel %array.2705, %offset.2707
	%conv.2709 =l extsw 1
	%tmp.2710 =l mul 8, %conv.2709
	%tmp.2712 =l add %tmp.2710, 4
	%array.full.2711 =l alloc8 %tmp.2712
	storew 1, %array.full.2711
	%array.2713 =l add %array.full.2711, 4
	%array.offset.2714 =l add %array.2713, 0
	storel $.2708, %array.offset.2714
	%offset.2715 =l add %struct.ElleMeta.2699, 8
	storel %array.2713, %offset.2715
	%offset.2716 =l add %struct.ElleMeta.2699, 16
	storew 1, %offset.2716
	%offset.2718 =l add %struct.ElleMeta.2699, 20
	storel $.2717, %offset.2718
	%offset.2720 =l add %struct.ElleMeta.2699, 28
	storel $.2719, %offset.2720
	%offset.2721 =l add %struct.ElleMeta.2699, 36
	storew 37, %offset.2721
	%offset.2722 =l add %struct.ElleMeta.2699, 40
	storew 22, %offset.2722
	%tmp.2723 =w call $io.eprintln(:ElleMeta %struct.ElleMeta.2699, ..., l %string.fmt.2698)
	storew 0, %i.addr.2642
	%i.2724 =w loadw %i.addr.2642
@loop.2725.cond
	%i.2724 =w loadw %i.addr.2642
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%conv.2726 =l extsw 4
	%tmp.2727 =l sub %valid_types.2626, %conv.2726
	%array.length.2728 =w loadw %tmp.2727
	%tmp.2729 =w csltw %i.2724, %array.length.2728
	jnz %tmp.2729, @loop.2725.body, @loop.2725.end
@loop.2725.step
	%i.2724 =w loadw %i.addr.2642
	%tmp.2730 =w add %i.2724, 1
	storew %tmp.2730, %i.addr.2642
	%i.2731 =w loadw %i.addr.2642
	jmp @loop.2725.cond
@loop.2725.body
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%i.2731 =w loadw %i.addr.2642
	%valid_types.2626 =l loadl %valid_types.addr.2637
	%i.2731 =w loadw %i.addr.2642
	%conv.2733 =l extsw %i.2731
	%tmp.2734 =l mul 8, %conv.2733
	%tmp.2735 =l add %valid_types.2626, %tmp.2734
	%load.2736 =l loadl %tmp.2735
	%string.fmt.2737 =l call $string.__fmt__(l $.2732, w 0)
	%string.fmt.2738 =l call $string.__fmt__(l %load.2736, w 0)
	%struct.ElleMeta.2739 =l alloc8 44
	%conv.2742 =l extsw 2
	%tmp.2743 =l mul 8, %conv.2742
	%tmp.2745 =l add %tmp.2743, 4
	%array.full.2744 =l alloc8 %tmp.2745
	storew 2, %array.full.2744
	%array.2746 =l add %array.full.2744, 4
	%array.offset.2747 =l add %array.2746, 0
	storel $.2740, %array.offset.2747
	%array.offset.2748 =l add %array.2746, 8
	storel $.2741, %array.offset.2748
	%offset.2749 =l add %struct.ElleMeta.2739, 0
	storel %array.2746, %offset.2749
	%conv.2752 =l extsw 2
	%tmp.2753 =l mul 8, %conv.2752
	%tmp.2755 =l add %tmp.2753, 4
	%array.full.2754 =l alloc8 %tmp.2755
	storew 2, %array.full.2754
	%array.2756 =l add %array.full.2754, 4
	%array.offset.2757 =l add %array.2756, 0
	storel $.2750, %array.offset.2757
	%array.offset.2758 =l add %array.2756, 8
	storel $.2751, %array.offset.2758
	%offset.2759 =l add %struct.ElleMeta.2739, 8
	storel %array.2756, %offset.2759
	%offset.2760 =l add %struct.ElleMeta.2739, 16
	storew 2, %offset.2760
	%offset.2762 =l add %struct.ElleMeta.2739, 20
	storel $.2761, %offset.2762
	%offset.2764 =l add %struct.ElleMeta.2739, 28
	storel $.2763, %offset.2764
	%offset.2765 =l add %struct.ElleMeta.2739, 36
	storew 40, %offset.2765
	%offset.2766 =l add %struct.ElleMeta.2739, 40
	storew 26, %offset.2766
	%tmp.2767 =w call $io.eprintln(:ElleMeta %struct.ElleMeta.2739, ..., l %string.fmt.2737, l %string.fmt.2738)
	jmp @loop.2725.step
@loop.2725.end
	ret 0
@end.2659
	%valid_strspn.2614 =l loadl %valid_strspn.addr.2625
	%type_index.2638 =w loadw %type_index.addr.2640
	%valid_strspn.2614 =l loadl %valid_strspn.addr.2625
	%type_index.2638 =w loadw %type_index.addr.2640
	%conv.2768 =l extsw %type_index.2638
	%tmp.2769 =l mul 8, %conv.2768
	%tmp.2770 =l add %valid_strspn.2614, %tmp.2769
	%load.2771 =l loadl %tmp.2770
	%tmp.2772 =l call $strspn(l %str.2612, l %load.2771)
	%tmp.2773 =l call $string.len(l %str.2612)
	%tmp.2774 =w cnel %tmp.2772, %tmp.2773
	jnz %tmp.2774, @ift.2775, @end.2775
@ift.2775
	ret 0
@end.2775
	ret 1
}
export function w $i32.try_parse(l %str.2828, l %res.2829) {
@start
	%tmp.2832 =w call $is_valid(l %str.2828, l $.2831)
	%valid.addr.2833 =l alloc8 4
	storew %tmp.2832, %valid.addr.2833
	%valid.2830 =w loadsw %valid.addr.2833
	jnz %valid.2830, @ift.2834, @end.2834
@ift.2834
	%tmp.2835 =l mul 4, 0
	%tmp.2836 =l add %res.2829, %tmp.2835
	%tmp.2837 =w call $atoi(l %str.2828)
	storew %tmp.2837, %tmp.2836
	ret 1
@end.2834
	ret 0
}
export function w $Array.len.0.2.15.1(l %self.2901) {
@start
	%load.2902 =l loadl %self.2901
	%offset.2903 =l add %load.2902, 0
	%field.2904 =w loadw %offset.2903
	ret %field.2904
}
export function l $Array.__load__.0.2.15.1(l %self.2911, l %i.2912) {
@start
	%load.2916 =l loadl %self.2911
	%offset.2917 =l add %load.2916, 8
	%field.2918 =l loadl %offset.2917
	%load.2919 =l loadl %self.2911
	%offset.2920 =l add %load.2919, 8
	%field.2921 =l loadl %offset.2920
	%tmp.2922 =l mul 8, %i.2912
	%tmp.2923 =l add %field.2921, %tmp.2922
	%load.2924 =l loadl %tmp.2923
	ret %load.2924
}
function w $s1(l %contents.2891) {
@start
	%tmp.2894 =l call $string.split(l %contents.2891, l $.2893)
	%parts.addr.2895 =l alloc8 8
	storel %tmp.2894, %parts.addr.2895
	%sum.addr.2897 =l alloc8 4
	storew 0, %sum.addr.2897
	%i.addr.2899 =l alloc8 4
	storew 0, %i.addr.2899
@loop.2900.cond
	%i.2898 =w loadw %i.addr.2899
	%parts.2892 =l loadl %parts.addr.2895
	%tmp.2905 =w call $Array.len.0.2.15.1(l %parts.2892)
	%tmp.2907 =w csltw %i.2898, %tmp.2905
	jnz %tmp.2907, @loop.2900.body, @loop.2900.end
@loop.2900.step
	%i.2898 =w loadw %i.addr.2899
	%tmp.2908 =w add %i.2898, 1
	storew %tmp.2908, %i.addr.2899
	%i.2909 =w loadw %i.addr.2899
	jmp @loop.2900.cond
@loop.2900.body
	%parts.2892 =l loadl %parts.addr.2895
	%i.2909 =w loadw %i.addr.2899
	%conv.2928 =l extsw %i.2909
	%tmp.2929 =l call $Array.__load__.0.2.15.1(l %parts.2892, l %conv.2928)
	%tmp.2932 =l call $string.split(l %tmp.2929, l $.2931)
	%numbers.addr.2933 =l alloc8 8
	storel %tmp.2932, %numbers.addr.2933
	%numbers.2910 =l loadl %numbers.addr.2933
	%tmp.2934 =w call $Array.len.0.2.15.1(l %numbers.2910)
	%tmp.2936 =w csgtw %tmp.2934, 1
	jnz %tmp.2936, @ift.2937, @end.2937
@ift.2937
	%left.addr.2939 =l alloc8 4
	storew 0, %left.addr.2939
	%end.addr.2942 =l alloc8 8
	storel $.2941, %end.addr.2942
	%numbers.2910 =l loadl %numbers.addr.2933
	%tmp.2946 =l call $Array.__load__.0.2.15.1(l %numbers.2910, l 1)
	%end.2940 =l loadl %end.addr.2942
	%tmp.2948 =l call $strtol(l %tmp.2946, l %end.addr.2942, w 10)
	%right.addr.2949 =l alloc8 8
	storel %tmp.2948, %right.addr.2949
	%numbers.2910 =l loadl %numbers.addr.2933
	%tmp.2952 =l call $Array.__load__.0.2.15.1(l %numbers.2910, l 0)
	%left.2938 =w loadw %left.addr.2939
	%tmp.2954 =w call $i32.try_parse(l %tmp.2952, l %left.addr.2939)
	%and.2951 =w copy 0
@and.left.2950
	%and.left.2955 =w ceqw %tmp.2954, 0
	jnz %and.left.2955, @and.end.2950, @and.right.2950
@and.right.2950
	%end.2940 =l loadl %end.addr.2942
	%end.2940 =l loadl %end.addr.2942
	%conv.2956 =l extsw 0
	%tmp.2957 =l mul 1, %conv.2956
	%tmp.2958 =l add %end.2940, %tmp.2957
	%load.2959 =w loadsb %tmp.2958
	%tmp.2960 =w ceqw %load.2959, 41
	%and.right.2961 =w ceqw %tmp.2960, 0
	jnz %and.right.2961, @and.end.2950, @and.right.match.2950
@and.left.match.2950
	%and.2951 =w copy %tmp.2954
	jmp @and.end.2950
@and.right.match.2950
	%and.2951 =w copy %tmp.2960
	jmp @and.end.2950
@and.end.2950
	jnz %and.2951, @ift.2962, @end.2962
@ift.2962
	%sum.2896 =w loadw %sum.addr.2897
	%left.2938 =w loadw %left.addr.2939
	%right.2943 =l loadl %right.addr.2949
	%conv.2963 =l extsw %left.2938
	%tmp.2964 =l mul %conv.2963, %right.2943
	%conv.2965 =l extsw %sum.2896
	%tmp.2966 =l add %conv.2965, %tmp.2964
	%conv.2967 =w copy %tmp.2966
	storew %conv.2967, %sum.addr.2897
	%sum.2968 =w loadw %sum.addr.2897
@end.2962

@end.2937
	jmp @loop.2900.step
@loop.2900.end
	%sum.2896 =w loadw %sum.addr.2897
	ret %sum.2896
}
function w $s2(l %contents.2969) {
@start
	%tmp.2972 =l call $string.split(l %contents.2969, l $.2971)
	%dos.addr.2973 =l alloc8 8
	storel %tmp.2972, %dos.addr.2973
	%sum.addr.2975 =l alloc8 4
	storew 0, %sum.addr.2975
	%i.addr.2977 =l alloc8 4
	storew 0, %i.addr.2977
@loop.2978.cond
	%i.2976 =w loadw %i.addr.2977
	%dos.2970 =l loadl %dos.addr.2973
	%tmp.2979 =w call $Array.len.0.2.15.1(l %dos.2970)
	%tmp.2981 =w csltw %i.2976, %tmp.2979
	jnz %tmp.2981, @loop.2978.body, @loop.2978.end
@loop.2978.step
	%i.2976 =w loadw %i.addr.2977
	%tmp.2982 =w add %i.2976, 1
	storew %tmp.2982, %i.addr.2977
	%i.2983 =w loadw %i.addr.2977
	jmp @loop.2978.cond
@loop.2978.body
	%dos.2970 =l loadl %dos.addr.2973
	%i.2983 =w loadw %i.addr.2977
	%conv.3019 =l extsw %i.2983
	%tmp.3020 =l call $Array.__load__.0.2.15.1(l %dos.2970, l %conv.3019)
	%tmp.3023 =l call $string.split(l %tmp.3020, l $.3022)
	%tmp.3024 =l call $Array.__load__.0.2.15.1(l %tmp.3023, l 0)
	%contents.addr.3026 =l alloc8 8
	storel %tmp.3024, %contents.addr.3026
	%sum.2974 =w loadw %sum.addr.2975
	%contents.2969 =l loadl %contents.addr.3026
	%tmp.3027 =w call $s1(l %contents.2969)
	%tmp.3028 =w add %sum.2974, %tmp.3027
	storew %tmp.3028, %sum.addr.2975
	%sum.3029 =w loadw %sum.addr.2975
	jmp @loop.2978.step
@loop.2978.end
	%sum.2974 =w loadw %sum.addr.2975
	ret %sum.2974
}
export function w $main() {
@start
	%tmp.3032 =l call $io.read_to_string(l $.3031)
	%contents.addr.3033 =l alloc8 8
	storel %tmp.3032, %contents.addr.3033
	%contents.3030 =l loadl %contents.addr.3033
	%tmp.3034 =w call $s1(l %contents.3030)
	%i32.fmt.3035 =l call $i32.__fmt__(w %tmp.3034, w 0)
	%struct.ElleMeta.3036 =l alloc8 44
	%conv.3038 =l extsw 1
	%tmp.3039 =l mul 8, %conv.3038
	%tmp.3041 =l add %tmp.3039, 4
	%array.full.3040 =l alloc8 %tmp.3041
	storew 1, %array.full.3040
	%array.3042 =l add %array.full.3040, 4
	%array.offset.3043 =l add %array.3042, 0
	storel $.3037, %array.offset.3043
	%offset.3044 =l add %struct.ElleMeta.3036, 0
	storel %array.3042, %offset.3044
	%conv.3046 =l extsw 1
	%tmp.3047 =l mul 8, %conv.3046
	%tmp.3049 =l add %tmp.3047, 4
	%array.full.3048 =l alloc8 %tmp.3049
	storew 1, %array.full.3048
	%array.3050 =l add %array.full.3048, 4
	%array.offset.3051 =l add %array.3050, 0
	storel $.3045, %array.offset.3051
	%offset.3052 =l add %struct.ElleMeta.3036, 8
	storel %array.3050, %offset.3052
	%offset.3053 =l add %struct.ElleMeta.3036, 16
	storew 1, %offset.3053
	%offset.3055 =l add %struct.ElleMeta.3036, 20
	storel $.3054, %offset.3055
	%offset.3057 =l add %struct.ElleMeta.3036, 28
	storel $.3056, %offset.3057
	%offset.3058 =l add %struct.ElleMeta.3036, 36
	storew 42, %offset.3058
	%offset.3059 =l add %struct.ElleMeta.3036, 40
	storew 13, %offset.3059
	%tmp.3060 =w call $io.dbg(:ElleMeta %struct.ElleMeta.3036, ..., l %i32.fmt.3035)
	%contents.3030 =l loadl %contents.addr.3033
	%tmp.3061 =w call $s2(l %contents.3030)
	%i32.fmt.3062 =l call $i32.__fmt__(w %tmp.3061, w 0)
	%struct.ElleMeta.3063 =l alloc8 44
	%conv.3065 =l extsw 1
	%tmp.3066 =l mul 8, %conv.3065
	%tmp.3068 =l add %tmp.3066, 4
	%array.full.3067 =l alloc8 %tmp.3068
	storew 1, %array.full.3067
	%array.3069 =l add %array.full.3067, 4
	%array.offset.3070 =l add %array.3069, 0
	storel $.3064, %array.offset.3070
	%offset.3071 =l add %struct.ElleMeta.3063, 0
	storel %array.3069, %offset.3071
	%conv.3073 =l extsw 1
	%tmp.3074 =l mul 8, %conv.3073
	%tmp.3076 =l add %tmp.3074, 4
	%array.full.3075 =l alloc8 %tmp.3076
	storew 1, %array.full.3075
	%array.3077 =l add %array.full.3075, 4
	%array.offset.3078 =l add %array.3077, 0
	storel $.3072, %array.offset.3078
	%offset.3079 =l add %struct.ElleMeta.3063, 8
	storel %array.3077, %offset.3079
	%offset.3080 =l add %struct.ElleMeta.3063, 16
	storew 1, %offset.3080
	%offset.3082 =l add %struct.ElleMeta.3063, 20
	storel $.3081, %offset.3082
	%offset.3084 =l add %struct.ElleMeta.3063, 28
	storel $.3083, %offset.3084
	%offset.3085 =l add %struct.ElleMeta.3063, 36
	storew 43, %offset.3085
	%offset.3086 =l add %struct.ElleMeta.3063, 40
	storew 13, %offset.3086
	%tmp.3087 =w call $io.dbg(:ElleMeta %struct.ElleMeta.3063, ..., l %i32.fmt.3062)
	ret 0
}
